2020-01-15 15:52:17,697 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 15400 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 15:52:17,723 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 15:52:17,724 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 15:52:17,800 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 15:52:17 CST 2020]; root of context hierarchy
2020-01-15 15:52:19,047 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 15:52:19,508 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 15:52:20,818 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 15:52:20,844 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 15:52:20,845 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 15:52:20,976 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 15:52:20,976 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3176 ms
2020-01-15 15:52:21,122 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 15:52:21,126 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 15:52:21,127 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 15:52:21,127 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 15:52:21,127 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 15:52:22,245 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 15:52:17 CST 2020]; root of context hierarchy
2020-01-15 15:52:22,322 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,324 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,324 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 15:52:22,325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 15:52:22,325 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 15:52:22,328 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,329 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 15:52:22,329 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,330 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,330 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,331 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,332 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 15:52:22,332 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,332 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,332 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,335 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 15:52:22,336 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 15:52:22,336 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 15:52:22,336 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 15:52:22,337 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 15:52:22,337 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 15:52:22,338 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 15:52:22,338 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 15:52:22,338 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,340 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 15:52:22,341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 15:52:22,342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 15:52:22,343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 15:52:22,343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 15:52:22,346 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 15:52:22,347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 15:52:22,347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 15:52:22,348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 15:52:22,348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 15:52:22,349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 15:52:22,351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,351 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 15:52:22,352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 15:52:22,352 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 15:52:22,353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,353 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 15:52:22,357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 15:52:22,387 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 15:52:22,387 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 15:52:22,387 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 15:52:22,424 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 15:52:22,736 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 15:52:22,790 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 15:52:22,805 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 15:52:22,826 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 15:52:22,849 [pool-2-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 15:52:22,859 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 15:52:22,883 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 15:52:22,894 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 5.766 seconds (JVM running for 6.341)
2020-01-15 15:52:23,152 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 15:52:23,176 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 15:52:23,188 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 15:52:23,189 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 15:52:23,189 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 15:52:23,192 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 15:52:23,192 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 15:52:23,193 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 15:52:23,194 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 15:52:23,197 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 15:52:23,197 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 15:52:23,199 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 15:52:23,201 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 15:52:23,201 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 15:52:23,202 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 15:52:23,206 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 15:52:23,207 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 15:52:23,208 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 15:52:23,211 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 15:52:23,211 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 15:52:23,213 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 15:52:23,214 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 15:52:23,214 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 15:52:23,217 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 15:52:23,218 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 15:52:23,219 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 15:52:23,220 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 15:52:23,223 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 15:52:23,224 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 15:52:23,225 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 15:52:23,227 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 15:52:23,228 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 15:52:23,229 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 15:52:23,231 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 15:52:23,231 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 15:52:23,233 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 15:52:23,235 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 15:52:23,235 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 15:52:23,236 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 15:52:23,238 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 15:52:23,239 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 15:52:23,239 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:01:26,324 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 15108 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:01:26,327 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:01:26,327 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:01:26,388 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:01:26 CST 2020]; root of context hierarchy
2020-01-15 18:01:26,952 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:01:27,423 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:01:28,619 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 18:01:28,637 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 18:01:28,639 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 18:01:28,790 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 18:01:28,790 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2402 ms
2020-01-15 18:01:28,957 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 18:01:28,961 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 18:01:28,962 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 18:01:28,962 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 18:01:28,962 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 18:01:30,041 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:01:26 CST 2020]; root of context hierarchy
2020-01-15 18:01:30,104 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 18:01:30,105 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 18:01:30,106 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 18:01:30,107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 18:01:30,107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,107 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,109 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,110 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,110 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,111 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,111 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,111 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,112 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 18:01:30,116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 18:01:30,116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 18:01:30,116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 18:01:30,116 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 18:01:30,117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 18:01:30,117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 18:01:30,117 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 18:01:30,118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 18:01:30,118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,118 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,119 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 18:01:30,120 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,120 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:01:30,120 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 18:01:30,120 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:01:30,122 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 18:01:30,124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,124 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:01:30,125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:01:30,125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 18:01:30,126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 18:01:30,126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:01:30,126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:01:30,126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 18:01:30,128 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:01:30,129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 18:01:30,130 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 18:01:30,130 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,130 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:01:30,130 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,131 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,131 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 18:01:30,133 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 18:01:30,156 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:01:30,157 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:01:30,157 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:01:30,188 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:01:30,410 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 18:01:30,421 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 18:01:30,435 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 18:01:30,447 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 18:01:30,454 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 18:01:30,474 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 18:01:30,506 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 18:01:30,515 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.56 seconds (JVM running for 5.159)
2020-01-15 18:01:30,765 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:01:30,800 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:01:30,816 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:01:30,817 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:01:30,818 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:01:30,820 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:01:30,820 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:01:30,821 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:01:30,822 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:01:30,827 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:01:30,827 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:01:30,828 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:01:30,832 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:01:30,832 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:01:30,833 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:01:30,836 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:01:30,836 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:01:30,837 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:01:30,840 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:01:30,841 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:01:30,842 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:01:30,843 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:01:30,843 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:01:30,845 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:01:30,846 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:01:30,846 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:01:30,847 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:01:30,850 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:01:30,850 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:01:30,852 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:01:30,853 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:01:30,854 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:01:30,855 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:01:30,857 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:01:30,858 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:01:30,859 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:01:30,862 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:01:30,862 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:01:30,863 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:01:30,865 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:01:30,866 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:01:30,866 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:02:44,290 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 9032 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:02:44,292 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:02:44,292 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:02:44,343 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:02:44 CST 2020]; root of context hierarchy
2020-01-15 18:02:44,735 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:02:45,322 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:04:27,011 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 10688 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:04:27,014 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:04:27,015 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:04:27,078 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:04:27 CST 2020]; root of context hierarchy
2020-01-15 18:04:27,572 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:04:28,135 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:04:29,299 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 18:04:29,318 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 18:04:29,320 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 18:04:29,432 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 18:04:29,432 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2354 ms
2020-01-15 18:04:29,583 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 18:04:29,589 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 18:04:29,589 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 18:04:29,590 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 18:04:29,590 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 18:04:30,731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:04:27 CST 2020]; root of context hierarchy
2020-01-15 18:04:30,797 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,798 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 18:04:30,799 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,801 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 18:04:30,802 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 18:04:30,803 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,803 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 18:04:30,803 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,804 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 18:04:30,806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,812 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 18:04:30,813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 18:04:30,813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 18:04:30,813 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 18:04:30,814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 18:04:30,815 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 18:04:30,815 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 18:04:30,815 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 18:04:30,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,817 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 18:04:30,818 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 18:04:30,818 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:04:30,819 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,819 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,819 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:04:30,820 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,821 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:04:30,821 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,821 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:04:30,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 18:04:30,823 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,823 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 18:04:30,823 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:04:30,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:04:30,825 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 18:04:30,826 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 18:04:30,831 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:04:30,832 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,833 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 18:04:30,833 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,834 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:04:30,834 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 18:04:30,834 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,834 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,835 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,835 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,836 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 18:04:30,837 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 18:04:30,872 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:04:30,872 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:04:30,872 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:04:30,910 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:04:31,164 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 18:04:31,178 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 18:04:31,191 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 18:04:31,200 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 18:04:31,203 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 18:04:31,219 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 18:04:31,264 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 18:04:31,270 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.731 seconds (JVM running for 5.215)
2020-01-15 18:04:31,566 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:04:31,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:04:31,605 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:04:31,607 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:04:31,607 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:04:31,612 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:04:31,613 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:04:31,614 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:04:31,616 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:04:31,620 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:04:31,620 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:04:31,623 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:04:31,626 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:04:31,626 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:04:31,627 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:04:31,631 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:04:31,632 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:04:31,633 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:04:31,636 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:04:31,637 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:04:31,638 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:04:31,639 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:04:31,640 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:04:31,641 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:04:31,643 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:04:31,644 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:04:31,645 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:04:31,647 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:04:31,648 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:04:31,649 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:04:31,652 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:04:31,653 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:04:31,655 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:04:31,657 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:04:31,657 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:04:31,669 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:04:31,672 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:04:31,672 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:04:31,674 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:04:31,676 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:04:31,677 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:04:31,678 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:07:31,207 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:07:31,209 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:07:31,211 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:07:31,212 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:07:31,214 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:07:31,216 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:07:31,217 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:07:31,217 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:07:31,219 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:07:31,222 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:07:31,223 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:07:31,225 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:07:31,226 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:07:31,227 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:07:31,229 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:07:31,233 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:07:31,233 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:07:31,235 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:07:31,238 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:07:31,238 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:07:31,241 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:07:31,242 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:07:31,242 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:07:31,243 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:07:31,243 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:07:31,244 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:07:31,246 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:07:31,248 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:07:31,249 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:07:31,249 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:07:31,251 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:07:31,252 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:07:31,253 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:07:31,255 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:07:31,256 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:07:31,257 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:07:31,258 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:07:31,259 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:07:31,260 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:07:31,262 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:07:31,262 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:07:31,263 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:08:39,287 [http-nio-8090-exec-9] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-15 18:08:39,288 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-15 18:08:39,310 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-01-15 18:08:39,406 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:08:39,407 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:08:39,408 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:08:39,462 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-15 18:08:39,462 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-15 18:08:39,464 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-15 18:09:06,772 [http-nio-8090-exec-8] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:09:06,773 [http-nio-8090-exec-8] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:09:06,777 [http-nio-8090-exec-8] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:09:41,715 [http-nio-8090-exec-7] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - ==>  Preparing: select userId,num,type,date from feed where userId=? 
2020-01-15 18:09:41,716 [http-nio-8090-exec-7] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - ==> Parameters: 1(Integer)
2020-01-15 18:09:41,717 [http-nio-8090-exec-7] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - <==      Total: 0
2020-01-15 18:10:31,187 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:10:31,189 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:10:31,193 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:10:31,195 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:10:31,196 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:10:31,200 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:10:31,201 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:10:31,202 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:10:31,204 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:10:31,209 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:10:31,210 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:10:31,211 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:10:31,213 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:10:31,213 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:10:31,215 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:10:31,217 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:10:31,218 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:10:31,220 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:10:31,222 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:10:31,223 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:10:31,224 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:10:31,225 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:10:31,225 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:10:31,226 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:10:31,227 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:10:31,227 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:10:31,228 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:10:31,231 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:10:31,232 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:10:31,233 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:10:31,235 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:10:31,236 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:10:31,237 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:10:31,239 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:10:31,240 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:10:31,241 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:10:31,242 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:10:31,242 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:10:31,243 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:10:31,246 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:10:31,247 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:10:31,248 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:11:29,145 [http-nio-8090-exec-4] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - ==>  Preparing: select userId,num,type,date from feed where userId=? 
2020-01-15 18:11:29,146 [http-nio-8090-exec-4] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - ==> Parameters: 1(Integer)
2020-01-15 18:11:29,147 [http-nio-8090-exec-4] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - <==      Total: 1
2020-01-15 18:11:50,965 [http-nio-8090-exec-3] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:11:50,966 [http-nio-8090-exec-3] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:11:50,966 [http-nio-8090-exec-3] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:13:31,199 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:13:31,201 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:13:31,209 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:13:31,210 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:13:31,211 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:13:31,212 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:13:31,213 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:13:31,214 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:13:31,215 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:13:31,218 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:13:31,219 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:13:31,221 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:13:31,223 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:13:31,224 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:13:31,225 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:13:31,227 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:13:31,228 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:13:31,230 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:13:31,233 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:13:31,233 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:13:31,235 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:13:31,236 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:13:31,237 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:13:31,238 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:13:31,239 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:13:31,240 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:13:31,241 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:13:31,243 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:13:31,243 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:13:31,244 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:13:31,245 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:13:31,245 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:13:31,246 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:13:31,247 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:13:31,248 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:13:31,248 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:13:31,249 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:13:31,250 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:13:31,250 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:13:31,251 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:13:31,252 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:13:31,252 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:16:31,195 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:16:31,196 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:16:31,198 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:16:31,199 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:16:31,199 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:16:31,201 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:16:31,201 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:16:31,202 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:16:31,204 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:16:31,207 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:16:31,208 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:16:31,209 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:16:31,211 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:16:31,211 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:16:31,213 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:16:31,215 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:16:31,215 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:16:31,216 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:16:31,218 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:16:31,219 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:16:31,220 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:16:31,221 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:16:31,221 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:16:31,222 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:16:31,222 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:16:31,223 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:16:31,224 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:16:31,225 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:16:31,226 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:16:31,227 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:16:31,228 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:16:31,229 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:16:31,230 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:16:31,231 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:16:31,232 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:16:31,233 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:16:31,234 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:16:31,234 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:16:31,236 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:16:31,238 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:16:31,238 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:16:31,239 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:18:06,727 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 5712 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:18:06,729 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:18:06,730 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:18:06,809 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:18:06 CST 2020]; root of context hierarchy
2020-01-15 18:18:07,458 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:18:08,558 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:18:11,507 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 18:18:11,550 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 18:18:11,552 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 18:18:11,771 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 18:18:11,771 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 4963 ms
2020-01-15 18:18:12,513 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 18:18:12,520 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 18:18:12,526 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 18:18:12,527 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 18:18:12,527 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 18:18:14,279 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 18:18:06 CST 2020]; root of context hierarchy
2020-01-15 18:18:14,374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 18:18:14,376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,377 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 18:18:14,378 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 18:18:14,379 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 18:18:14,384 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,389 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,394 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 18:18:14,397 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,397 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,398 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,405 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 18:18:14,406 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 18:18:14,406 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 18:18:14,406 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 18:18:14,407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 18:18:14,407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 18:18:14,407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 18:18:14,407 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 18:18:14,408 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,409 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,409 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,409 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 18:18:14,410 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:18:14,411 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,411 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,412 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 18:18:14,412 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:18:14,413 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:18:14,413 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,413 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,414 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 18:18:14,414 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:18:14,415 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,416 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,417 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:18:14,417 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:18:14,417 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 18:18:14,417 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 18:18:14,418 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 18:18:14,422 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:18:14,424 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,425 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 18:18:14,425 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,426 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 18:18:14,426 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:18:14,426 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,427 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,429 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 18:18:14,430 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 18:18:14,487 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:18:14,487 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:18:14,487 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:18:14,754 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:18:15,702 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 18:18:15,756 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 18:18:15,797 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 18:18:15,863 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 18:18:15,884 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 18:18:15,897 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 18:18:15,970 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 18:18:15,975 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 9.868 seconds (JVM running for 10.42)
2020-01-15 18:18:16,366 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:18:16,395 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:18:16,410 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:18:16,413 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:18:16,413 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:18:16,418 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:18:16,419 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:18:16,420 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:18:16,423 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:18:16,428 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:18:16,429 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:18:16,430 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:18:16,437 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:18:16,438 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:18:16,439 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:18:16,441 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:18:16,442 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:18:16,443 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:18:16,445 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:18:16,445 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:18:16,447 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:18:16,448 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:18:16,449 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:18:16,451 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:18:16,453 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:18:16,453 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:18:16,455 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:18:16,457 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:18:16,458 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:18:16,459 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:18:16,461 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:18:16,462 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:18:16,465 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:18:16,469 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:18:16,470 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:18:16,471 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:18:16,473 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:18:16,474 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:18:16,475 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:18:16,477 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:18:16,478 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:18:16,478 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:18:58,176 [http-nio-8090-exec-9] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-15 18:18:58,177 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-15 18:18:58,196 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2020-01-15 18:18:58,278 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:18:58,278 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:18:58,281 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:18:58,328 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-15 18:18:58,329 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-15 18:18:58,330 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-15 18:19:23,909 [http-nio-8090-exec-8] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:19:23,910 [http-nio-8090-exec-8] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:19:23,913 [http-nio-8090-exec-8] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:20:19,729 [http-nio-8090-exec-6] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:20:19,730 [http-nio-8090-exec-6] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:20:19,731 [http-nio-8090-exec-6] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:20:26,996 [http-nio-8090-exec-5] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:20:26,996 [http-nio-8090-exec-5] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:20:26,997 [http-nio-8090-exec-5] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:20:26,998 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:20:26,998 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:20:27,000 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:20:27,001 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:20:27,002 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:20:27,003 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:20:42,069 [http-nio-8090-exec-4] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:20:42,070 [http-nio-8090-exec-4] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:20:42,071 [http-nio-8090-exec-4] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:20:42,072 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:20:42,072 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:20:42,073 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:20:42,074 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:20:42,074 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:20:42,075 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:21:15,789 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:21:15,790 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:21:15,791 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:21:15,792 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:21:15,792 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:21:15,793 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:21:15,794 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:21:15,794 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:21:15,795 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:21:15,797 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:21:15,797 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:21:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:21:15,800 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:21:15,800 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:21:15,801 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:21:15,802 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:21:15,803 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:21:15,804 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:21:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:21:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:21:15,807 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:21:15,808 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:21:15,808 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:21:15,809 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:21:15,809 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:21:15,809 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:21:15,811 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:21:15,813 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:21:15,813 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:21:15,814 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:21:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:21:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:21:15,817 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:21:15,818 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:21:15,819 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:21:15,819 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:21:15,821 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:21:15,821 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:21:15,822 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:21:15,823 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:21:15,823 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:21:15,824 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:21:31,703 [http-nio-8090-exec-3] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:21:31,703 [http-nio-8090-exec-3] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:21:31,705 [http-nio-8090-exec-3] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:21:31,705 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:21:31,706 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 13666154570(String)
2020-01-15 18:21:31,707 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-15 18:21:40,253 [http-nio-8090-exec-2] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:21:40,254 [http-nio-8090-exec-2] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:21:40,254 [http-nio-8090-exec-2] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:21:40,255 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:21:40,255 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 13666154571(String)
2020-01-15 18:21:40,256 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:21:40,257 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:21:40,257 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:21:40,258 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:21:40,259 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-15 18:21:40,260 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 1(Integer), -100.0(Double), 5(Integer), 2020-01-15 18:21:40.259(Timestamp)
2020-01-15 18:21:40,265 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-15 18:21:40,266 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-15 18:21:40,267 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 7(Integer), 100.0(Double), 3(Integer), 2020-01-15 18:21:40.259(Timestamp)
2020-01-15 18:21:40,268 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-15 18:22:32,329 [http-nio-8090-exec-1] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==>  Preparing: select sum(num) from feed where userId=? 
2020-01-15 18:22:32,329 [http-nio-8090-exec-1] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:22:32,330 [http-nio-8090-exec-1] DEBUG c.j.d.FeedDao.queryTotalFeedByUserId 159 - <==      Total: 1
2020-01-15 18:22:37,187 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - ==>  Preparing: select userId,num,type,date from feed where userId=? 
2020-01-15 18:22:37,188 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - ==> Parameters: 1(Integer)
2020-01-15 18:22:37,190 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.FeedDao.queryFeedDetail 159 - <==      Total: 2
2020-01-15 18:24:15,796 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:24:15,797 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:24:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:24:15,799 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:24:15,799 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:24:15,801 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:24:15,802 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:24:15,803 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:24:15,804 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:24:15,805 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:24:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:24:15,807 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:24:15,809 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:24:15,809 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:24:15,810 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:24:15,811 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:24:15,812 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:24:15,812 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:24:15,814 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:24:15,814 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:24:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:24:15,817 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:24:15,817 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:24:15,818 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:24:15,818 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:24:15,818 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:24:15,819 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:24:15,820 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:24:15,821 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:24:15,821 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:24:15,823 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:24:15,823 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:24:15,824 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:24:15,825 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:24:15,825 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:24:15,826 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:24:15,827 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:24:15,828 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:24:15,829 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:24:15,830 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:24:15,831 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:24:15,832 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:27:15,804 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:27:15,805 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:27:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:27:15,817 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:27:15,818 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:27:15,820 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:27:15,821 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:27:15,821 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:27:15,822 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:27:15,825 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:27:15,826 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:27:15,827 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:27:15,830 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:27:15,830 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:27:15,832 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:27:15,834 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:27:15,835 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:27:15,836 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:27:15,838 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:27:15,839 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:27:15,841 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:27:15,842 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:27:15,842 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:27:15,843 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:27:15,844 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:27:15,845 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:27:15,846 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:27:15,850 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:27:15,850 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:27:15,851 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:27:15,852 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:27:15,853 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:27:15,854 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:27:15,855 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:27:15,856 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:27:15,856 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:27:15,857 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:27:15,858 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:27:15,858 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:27:15,859 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:27:15,860 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:27:15,860 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:30:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:30:15,799 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:30:15,801 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:30:15,802 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:30:15,802 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:30:15,804 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:30:15,805 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:30:15,805 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:30:15,806 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:30:15,809 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:30:15,810 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:30:15,811 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:30:15,814 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:30:15,814 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:30:15,815 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:30:15,817 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:30:15,818 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:30:15,819 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:30:15,821 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:30:15,822 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:30:15,823 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:30:15,823 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:30:15,824 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:30:15,825 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:30:15,825 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:30:15,826 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:30:15,826 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:30:15,828 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:30:15,829 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:30:15,830 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:30:15,832 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:30:15,833 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:30:15,834 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:30:15,835 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:30:15,836 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:30:15,836 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:30:15,837 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:30:15,838 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:30:15,839 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:30:15,841 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:30:15,841 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:30:15,842 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:33:15,802 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:33:15,804 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:33:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:33:15,807 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:33:15,808 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:33:15,810 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:33:15,811 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:33:15,812 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:33:15,814 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:33:15,817 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:33:15,818 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:33:15,820 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:33:15,822 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:33:15,822 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:33:15,823 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:33:15,825 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:33:15,825 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:33:15,826 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:33:15,828 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:33:15,829 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:33:15,830 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:33:15,831 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:33:15,831 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:33:15,832 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:33:15,832 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:33:15,832 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:33:15,833 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:33:15,836 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:33:15,837 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:33:15,839 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:33:15,840 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:33:15,841 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:33:15,842 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:33:15,844 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:33:15,844 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:33:15,845 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:33:15,847 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:33:15,847 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:33:15,848 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:33:15,850 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:33:15,850 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:33:15,850 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:36:15,797 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:36:15,797 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:36:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:36:15,798 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:36:15,799 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:36:15,799 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:36:15,800 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:36:15,800 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:36:15,801 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:36:15,802 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:36:15,803 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:36:15,804 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:36:15,805 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:36:15,805 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:36:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:36:15,807 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:36:15,808 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:36:15,808 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:36:15,810 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:36:15,811 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:36:15,812 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:36:15,812 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:36:15,813 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:36:15,813 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:36:15,813 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:36:15,814 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:36:15,814 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:36:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:36:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:36:15,817 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:36:15,818 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:36:15,818 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:36:15,819 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:36:15,820 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:36:15,821 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:36:15,821 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:36:15,823 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:36:15,823 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:36:15,824 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:36:15,825 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:36:15,826 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:36:15,827 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:36:45,879 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-15 18:36:45,880 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 1(Integer)
2020-01-15 18:36:45,882 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-15 18:36:45,882 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:36:45,883 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:36:45,885 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:37:09,032 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-15 18:37:09,033 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 1(Integer)
2020-01-15 18:37:09,034 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-15 18:37:09,034 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:37:09,035 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:37:09,044 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:37:09,063 [http-nio-8090-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.] with root cause
java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.
	at java.math.BigDecimal.divide(BigDecimal.java:1690)
	at com.jizhi.service.impl.ProfitsServiceImpl.tryShareProfitsToFeed(ProfitsServiceImpl.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy90.tryShareProfitsToFeed(Unknown Source)
	at com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(ProfitsController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-15 18:39:15,793 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:39:15,793 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:39:15,794 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:39:15,794 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:39:15,795 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:39:15,795 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:39:15,796 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:39:15,796 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:39:15,796 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:39:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:39:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:39:15,799 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:39:15,800 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:39:15,801 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:39:15,802 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:39:15,803 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:39:15,803 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:39:15,804 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:39:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:39:15,806 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:39:15,807 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:39:15,807 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:39:15,807 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:39:15,808 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:39:15,808 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:39:15,809 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:39:15,809 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:39:15,811 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:39:15,811 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:39:15,812 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:39:15,813 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:39:15,814 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:39:15,815 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:39:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:39:15,816 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:39:15,817 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:39:15,818 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:39:15,819 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:39:15,819 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:39:15,821 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:39:15,821 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:39:15,822 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:42:15,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:42:15,799 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:42:15,801 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:42:15,802 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:42:15,802 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:42:15,803 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:42:15,804 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:42:15,804 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:42:15,805 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:42:15,807 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:42:15,808 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:42:15,809 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:42:15,811 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:42:15,811 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:42:15,813 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:42:15,815 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:42:15,816 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:42:15,817 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:42:15,819 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:42:15,819 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:42:15,820 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:42:15,820 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:42:15,821 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:42:15,821 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:42:15,822 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:42:15,822 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:42:15,823 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:42:15,824 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:42:15,824 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:42:15,825 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:42:15,826 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:42:15,826 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:42:15,827 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:42:15,828 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:42:15,829 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:42:15,830 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:42:15,832 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:42:15,833 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:42:15,834 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:42:15,836 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:42:15,836 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:42:15,836 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:44:09,126 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 14360 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:44:09,135 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:44:09,135 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:44:09,225 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Wed Jan 15 18:44:09 CST 2020]; root of context hierarchy
2020-01-15 18:44:09,715 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:44:10,647 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:44:12,434 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 18:44:12,460 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 18:44:12,462 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 18:44:12,669 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 18:44:12,670 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3445 ms
2020-01-15 18:44:12,914 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 18:44:12,922 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 18:44:12,922 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 18:44:12,922 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 18:44:12,923 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 18:44:14,835 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Wed Jan 15 18:44:09 CST 2020]; root of context hierarchy
2020-01-15 18:44:15,000 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,001 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 18:44:15,002 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,003 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 18:44:15,003 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 18:44:15,004 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,005 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,005 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 18:44:15,006 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,007 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,007 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,009 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,013 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,013 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,014 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 18:44:15,018 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 18:44:15,019 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 18:44:15,019 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 18:44:15,019 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 18:44:15,020 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 18:44:15,021 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 18:44:15,021 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 18:44:15,021 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 18:44:15,022 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,023 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,023 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,024 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 18:44:15,029 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:44:15,030 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,030 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:44:15,031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 18:44:15,031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,032 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:44:15,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 18:44:15,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:44:15,035 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,035 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 18:44:15,036 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 18:44:15,036 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 18:44:15,036 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:44:15,037 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:44:15,039 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:44:15,040 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,041 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,041 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 18:44:15,041 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 18:44:15,042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:44:15,042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,042 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,043 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,046 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 18:44:15,049 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 18:44:15,112 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:44:15,112 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:44:15,112 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:44:15,196 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:44:16,120 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 18:44:16,137 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 18:44:16,170 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 18:44:16,184 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 18:44:16,192 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 18:44:16,244 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 18:44:16,356 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 18:44:16,363 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 7.874 seconds (JVM running for 9.055)
2020-01-15 18:44:16,836 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:44:16,865 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:44:16,881 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:44:16,883 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:44:16,884 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:44:16,886 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:44:16,887 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:44:16,887 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:44:16,889 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:44:16,894 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:44:16,895 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:44:16,896 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:44:16,902 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:44:16,903 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:44:16,904 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:44:16,907 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:44:16,908 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:44:16,909 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:44:16,912 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:44:16,913 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:44:16,917 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:44:16,917 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:44:16,918 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:44:16,920 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:44:16,922 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:44:16,923 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:44:16,924 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:44:16,928 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:44:16,929 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:44:16,930 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:44:16,936 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:44:16,937 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:44:16,938 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:44:16,941 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:44:16,942 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:44:16,943 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:44:16,945 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:44:16,946 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:44:16,947 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:44:16,952 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:44:16,952 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:44:16,954 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:44:44,629 [http-nio-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-15 18:44:44,630 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-15 18:44:44,665 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2020-01-15 18:44:44,782 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:44:44,783 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:44:44,784 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:44:44,842 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-15 18:44:44,846 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-15 18:44:44,849 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-15 18:45:20,740 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-15 18:45:20,748 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 1(Integer)
2020-01-15 18:45:20,812 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-15 18:45:21,528 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:45:21,536 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:45:21,580 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:46:07,741 [http-nio-8090-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.] with root cause
java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.
	at java.math.BigDecimal.divide(BigDecimal.java:1690)
	at com.jizhi.service.impl.ProfitsServiceImpl.tryShareProfitsToFeed(ProfitsServiceImpl.java:126)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy90.tryShareProfitsToFeed(Unknown Source)
	at com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(ProfitsController.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-15 18:47:16,158 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:47:16,158 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:47:16,159 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:47:16,160 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:47:16,160 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:47:16,162 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:47:16,162 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:47:16,163 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:47:16,163 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:47:16,165 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:47:16,165 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:47:16,166 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:47:16,168 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:47:16,168 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:47:16,169 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:47:16,171 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:47:16,171 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:47:16,172 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:47:16,174 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:47:16,174 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:47:16,175 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:47:16,175 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:47:16,175 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:47:16,176 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:47:16,176 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:47:16,176 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:47:16,178 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:47:16,180 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:47:16,180 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:47:16,181 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:47:16,184 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:47:16,184 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:47:16,185 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:47:16,187 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:47:16,187 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:47:16,188 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:47:16,189 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:47:16,190 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:47:16,190 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:47:16,191 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:47:16,192 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:47:16,192 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:50:16,160 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:50:16,160 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:50:16,161 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:50:16,162 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:50:16,162 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:50:16,163 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:50:16,163 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:50:16,164 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:50:16,165 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:50:16,167 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:50:16,167 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:50:16,168 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:50:16,171 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:50:16,171 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:50:16,173 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:50:16,174 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:50:16,175 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:50:16,176 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:50:16,182 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:50:16,183 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:50:16,184 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:50:16,185 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:50:16,185 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:50:16,186 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:50:16,186 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:50:16,186 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:50:16,187 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:50:16,190 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:50:16,190 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:50:16,191 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:50:16,193 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:50:16,193 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:50:16,194 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:50:16,195 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:50:16,196 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:50:16,197 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:50:16,198 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:50:16,198 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:50:16,199 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:50:16,200 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:50:16,201 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:50:16,201 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:50:54,235 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 16808 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:50:54,241 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:50:54,241 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:50:54,392 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Wed Jan 15 18:50:54 CST 2020]; root of context hierarchy
2020-01-15 18:50:55,074 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:50:55,955 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:50:57,806 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 18:50:57,826 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 18:50:57,828 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 18:50:57,994 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 18:50:57,994 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3602 ms
2020-01-15 18:50:58,235 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 18:50:58,242 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 18:50:58,244 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 18:50:58,244 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 18:50:58,244 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 18:50:59,943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Wed Jan 15 18:50:54 CST 2020]; root of context hierarchy
2020-01-15 18:51:00,138 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,139 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 18:51:00,140 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 18:51:00,141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 18:51:00,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 18:51:00,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,145 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 18:51:00,147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,156 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 18:51:00,156 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 18:51:00,157 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 18:51:00,157 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 18:51:00,158 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 18:51:00,159 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 18:51:00,159 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 18:51:00,159 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 18:51:00,161 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,161 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,161 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,162 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 18:51:00,163 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:51:00,165 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,165 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 18:51:00,167 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:51:00,168 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,173 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:51:00,174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 18:51:00,174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,175 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:51:00,176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:51:00,176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 18:51:00,177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 18:51:00,177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:51:00,178 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 18:51:00,180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:51:00,183 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,183 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:51:00,184 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 18:51:00,189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 18:51:00,190 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,193 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 18:51:00,194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 18:51:00,248 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:51:00,249 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:51:00,249 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:51:00,314 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:51:00,976 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 18:51:01,006 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 18:51:01,055 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 18:51:01,061 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 18:51:01,075 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 18:51:01,126 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 18:51:01,177 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 18:51:01,267 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 7.667 seconds (JVM running for 8.466)
2020-01-15 18:51:01,713 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:51:01,749 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:51:01,762 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:51:01,766 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:51:01,767 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:51:01,768 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:51:01,769 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:51:01,769 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:51:01,771 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:51:01,776 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:51:01,777 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:51:01,779 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:51:01,784 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:51:01,785 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:51:01,786 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:51:01,790 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:51:01,790 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:51:01,792 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:51:01,797 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:51:01,798 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:51:01,800 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:51:01,800 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:51:01,801 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:51:01,803 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:51:01,805 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:51:01,805 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:51:01,806 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:51:01,809 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:51:01,810 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:51:01,811 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:51:01,813 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:51:01,814 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:51:01,815 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:51:01,817 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:51:01,818 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:51:01,819 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:51:01,821 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:51:01,821 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:51:01,822 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:51:01,825 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:51:01,826 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:51:01,826 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:51:15,362 [http-nio-8090-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-15 18:51:15,363 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-15 18:51:15,394 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2020-01-15 18:51:15,513 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:51:15,513 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:51:15,516 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:51:15,577 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-15 18:51:15,578 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-15 18:51:15,579 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-15 18:51:43,707 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-15 18:51:43,716 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 1(Integer)
2020-01-15 18:51:43,778 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-15 18:51:43,944 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:51:43,952 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:51:43,998 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:53:16,444 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 10128 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 18:53:16,452 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 18:53:16,452 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 18:53:16,628 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75d2da2d: startup date [Wed Jan 15 18:53:16 CST 2020]; root of context hierarchy
2020-01-15 18:53:17,646 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 18:53:18,847 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 18:53:21,707 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 18:53:21,738 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 18:53:21,740 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 18:53:21,952 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 18:53:21,953 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 5325 ms
2020-01-15 18:53:22,202 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 18:53:22,208 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 18:53:22,209 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 18:53:22,210 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 18:53:22,210 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 18:53:24,224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75d2da2d: startup date [Wed Jan 15 18:53:16 CST 2020]; root of context hierarchy
2020-01-15 18:53:24,341 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,342 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,343 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 18:53:24,344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 18:53:24,344 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 18:53:24,345 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,346 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,346 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 18:53:24,347 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,348 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,349 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,350 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 18:53:24,354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 18:53:24,354 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 18:53:24,355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 18:53:24,355 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 18:53:24,356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 18:53:24,356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 18:53:24,356 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 18:53:24,357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 18:53:24,357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,357 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,358 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,358 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 18:53:24,359 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,361 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:53:24,362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 18:53:24,362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 18:53:24,363 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 18:53:24,364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,364 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:53:24,365 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 18:53:24,366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 18:53:24,366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:53:24,366 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 18:53:24,367 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 18:53:24,367 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 18:53:24,369 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:53:24,371 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,371 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 18:53:24,373 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 18:53:24,375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 18:53:24,375 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,376 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,377 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,377 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,380 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 18:53:24,388 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 18:53:24,439 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:53:24,439 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:53:24,439 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:53:24,523 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 18:53:25,805 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 18:53:25,841 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 18:53:25,872 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 18:53:25,943 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 18:53:25,950 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 18:53:25,990 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 18:53:26,262 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 18:53:26,311 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 10.593 seconds (JVM running for 11.535)
2020-01-15 18:53:27,151 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:53:27,199 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:53:27,218 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:53:27,222 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:53:27,223 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:53:27,224 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:53:27,225 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:53:27,226 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:53:27,228 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:53:27,233 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:53:27,234 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:53:27,236 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:53:27,243 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:53:27,244 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:53:27,245 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:53:27,249 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:53:27,250 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:53:27,251 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:53:27,255 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:53:27,255 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:53:27,257 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:53:27,258 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:53:27,259 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:53:27,263 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:53:27,266 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:53:27,266 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:53:27,268 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:53:27,271 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:53:27,273 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:53:27,274 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:53:27,277 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:53:27,278 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:53:27,280 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:53:27,283 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:53:27,284 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:53:27,285 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:53:27,288 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:53:27,289 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:53:27,290 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:53:27,294 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:53:27,295 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:53:27,295 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:53:30,650 [http-nio-8090-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-15 18:53:30,650 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-15 18:53:30,686 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2020-01-15 18:53:30,975 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 18:53:30,976 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 18:53:30,984 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 18:53:31,213 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-15 18:53:31,216 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-15 18:53:31,218 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-15 18:53:55,652 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-15 18:53:55,660 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 1(Integer)
2020-01-15 18:53:55,728 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-15 18:53:55,876 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:53:55,884 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:53:55,967 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:56:25,875 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:56:25,876 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:56:25,880 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:56:25,880 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:56:25,881 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:56:25,885 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:56:25,887 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:56:25,888 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:56:25,891 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:56:25,894 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-15 18:56:25,895 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-15 18:56:25,898 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-15 18:56:25,901 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-15 18:56:25,902 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-15(String), 14:00(String)
2020-01-15 18:56:25,903 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-15 18:56:25,904 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-15 18:56:25,905 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-14(String), 14:00(String)
2020-01-15 18:56:25,906 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-15 18:56:25,909 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 18:56:25,909 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 18:56:25,910 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 18:56:25,911 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:56:25,911 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 18:56:25,912 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:56:25,912 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 18:56:25,912 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 18:56:25,914 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 18:56:25,916 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:56:25,917 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 18:56:25,918 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:56:25,920 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:56:25,920 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 18:56:25,921 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:56:25,922 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 18:56:25,923 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 18:56:25,924 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 18:56:25,925 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 18:56:25,925 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 18:56:25,926 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 18:56:25,927 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 18:56:25,927 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 18:56:25,928 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 18:57:49,558 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:57:49,559 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:57:49,561 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:57:53,256 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 18:57:53,257 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 18:57:53,258 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 18:57:53,259 [http-nio-8090-exec-8] DEBUG c.j.d.ProfitsDao.shareProfitsToFeed 159 - ==>  Preparing: insert into profits(animalProfit,shareProfit,NFC,sharerId,state) values(,?,?,?,?,?) 
2020-01-15 18:57:53,260 [http-nio-8090-exec-8] DEBUG c.j.d.ProfitsDao.shareProfitsToFeed 159 - ==> Parameters: 0.0(Double), -49.6(Double), 0(Integer), 1(Integer), 2(Integer)
2020-01-15 18:57:53,275 [http-nio-8090-exec-8] INFO  o.s.b.f.xml.XmlBeanDefinitionReader 317 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-01-15 18:57:53,335 [http-nio-8090-exec-8] INFO  o.s.j.support.SQLErrorCodesFactory 127 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2020-01-15 18:57:53,364 [http-nio-8090-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0.0,-49.6,0,1,2)' at line 2
### The error may involve com.jizhi.dao.ProfitsDao.shareProfitsToFeed-Inline
### The error occurred while setting parameters
### SQL: insert into profits(animalProfit,shareProfit,NFC,sharerId,state)    values(,?,?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0.0,-49.6,0,1,2)' at line 2
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0.0,-49.6,0,1,2)' at line 2] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '0.0,-49.6,0,1,2)' at line 2
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:943)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy109.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy110.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy88.shareProfitsToFeed(Unknown Source)
	at com.jizhi.service.impl.ProfitsServiceImpl.shareProfitsToFeed(ProfitsServiceImpl.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy90.shareProfitsToFeed(Unknown Source)
	at com.jizhi.controller.ProfitsController.shareProfitsToFeed(ProfitsController.java:64)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-15 19:00:18,955 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 16580 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-15 19:00:18,958 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-15 19:00:18,958 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-15 19:00:19,029 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 19:00:19 CST 2020]; root of context hierarchy
2020-01-15 19:00:19,553 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-15 19:00:20,017 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-15 19:00:21,126 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-15 19:00:21,144 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-15 19:00:21,145 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-15 19:00:21,254 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-15 19:00:21,254 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2225 ms
2020-01-15 19:00:21,446 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-15 19:00:21,453 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-15 19:00:21,453 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-15 19:00:21,454 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-15 19:00:21,454 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-15 19:00:22,856 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Wed Jan 15 19:00:19 CST 2020]; root of context hierarchy
2020-01-15 19:00:22,923 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,924 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-15 19:00:22,924 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-15 19:00:22,925 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-15 19:00:22,926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-15 19:00:22,926 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,927 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,928 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,929 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-15 19:00:22,930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,930 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-15 19:00:22,933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-15 19:00:22,933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-15 19:00:22,933 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-15 19:00:22,936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-15 19:00:22,936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-15 19:00:22,936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-15 19:00:22,936 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-15 19:00:22,937 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,937 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,937 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-15 19:00:22,938 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 19:00:22,939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-15 19:00:22,939 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-15 19:00:22,940 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-15 19:00:22,941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-15 19:00:22,941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,941 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,942 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-15 19:00:22,943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 19:00:22,943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-15 19:00:22,943 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-15 19:00:22,944 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-15 19:00:22,944 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-15 19:00:22,945 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 19:00:22,946 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-15 19:00:22,947 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,949 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-15 19:00:22,950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-15 19:00:22,950 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,952 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-15 19:00:22,953 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-15 19:00:22,981 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 19:00:22,981 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 19:00:22,982 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 19:00:23,031 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-15 19:00:23,421 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-15 19:00:23,443 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-15 19:00:23,456 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-15 19:00:23,478 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-15 19:00:23,482 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-15 19:00:23,500 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-15 19:00:23,522 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-15 19:00:23,537 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 5.209 seconds (JVM running for 5.778)
2020-01-15 19:00:23,868 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 19:00:23,896 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 19:00:23,910 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 19:00:23,912 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:00:23,913 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 19:00:23,917 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:00:23,918 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:00:23,919 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 19:00:23,920 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:00:23,926 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 19:00:23,926 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 19:00:23,928 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 19:00:23,929 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:00:23,930 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 19:00:23,932 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:00:23,934 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:00:23,935 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 19:00:23,937 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:00:23,941 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:00:23,942 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 19:00:23,944 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:00:23,946 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:00:23,947 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 19:00:23,951 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:00:23,953 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:00:23,954 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 19:00:23,955 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:00:23,958 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 19:00:23,959 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 19:00:23,960 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 19:00:23,962 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 19:00:23,962 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 19:00:23,963 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 19:00:52,843 [http-nio-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-15 19:00:52,844 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-15 19:00:52,872 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2020-01-15 19:00:52,966 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-15 19:00:52,967 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-15 19:00:52,968 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-15 19:00:53,039 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-15 19:00:53,040 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-15 19:00:53,041 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-15 19:01:19,036 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-15 19:01:19,037 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 1(Integer)
2020-01-15 19:01:19,039 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-15 19:01:19,040 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 19:01:19,041 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 19:01:19,042 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 19:01:42,059 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 19:01:42,060 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 19:01:42,061 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 19:01:42,063 [http-nio-8090-exec-5] DEBUG c.j.d.ProfitsDao.shareProfitsToFeed 159 - ==>  Preparing: insert into profits(animalProfit,shareProfit,NFC,sharerId,state) values(?,?,?,?,?) 
2020-01-15 19:01:42,064 [http-nio-8090-exec-5] DEBUG c.j.d.ProfitsDao.shareProfitsToFeed 159 - ==> Parameters: 0.0(Double), -49.6(Double), 0(Integer), 1(Integer), 2(Integer)
2020-01-15 19:01:42,067 [http-nio-8090-exec-5] DEBUG c.j.d.ProfitsDao.shareProfitsToFeed 159 - <==    Updates: 1
2020-01-15 19:01:42,068 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-15 19:01:42,069 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 1(Integer), 62.0(Double), 4(Integer), 2020-01-15 19:01:42.067(Timestamp)
2020-01-15 19:01:42,070 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-15 19:02:41,571 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 19:02:41,571 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 19:02:41,573 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 19:02:41,573 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-15 19:02:41,574 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 1(Integer)
2020-01-15 19:02:41,575 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-15 19:03:23,454 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 19:03:23,455 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 19:03:23,457 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 19:03:23,458 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:03:23,459 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 19:03:23,462 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:03:23,463 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:03:23,464 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 19:03:23,466 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:03:23,470 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 19:03:23,471 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 19:03:23,473 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 19:03:23,474 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:03:23,475 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 19:03:23,476 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:03:23,477 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:03:23,478 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 19:03:23,481 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:03:23,485 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:03:23,486 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 19:03:23,488 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:03:23,491 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:03:23,492 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 19:03:23,494 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:03:23,498 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:03:23,499 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 19:03:23,500 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:03:23,502 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:03:23,503 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-15 19:03:23,503 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:03:23,505 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 19:03:23,505 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 19:03:23,506 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 19:03:23,508 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 19:03:23,508 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 19:03:23,509 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-15 19:03:30,094 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-15 19:03:30,095 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-15 19:03:30,096 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-15 19:03:30,097 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-15 19:03:30,097 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 1(Integer)
2020-01-15 19:03:30,098 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-15 19:03:44,679 [http-nio-8090-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.jizhi.service.impl.ProfitsServiceImpl.NFCToFeed(ProfitsServiceImpl.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy90.NFCToFeed(Unknown Source)
	at com.jizhi.controller.ProfitsController.NFCToFeed(ProfitsController.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-15 19:05:48,987 [http-nio-8090-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.jizhi.service.impl.ProfitsServiceImpl.NFCToFeed(ProfitsServiceImpl.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy90.NFCToFeed(Unknown Source)
	at com.jizhi.controller.ProfitsController.NFCToFeed(ProfitsController.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-15 19:06:15,197 [http-nio-8090-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NumberFormatException: For input string: "null"] with root cause
java.lang.NumberFormatException: For input string: "null"
	at sun.misc.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2043)
	at sun.misc.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.lang.Double.parseDouble(Double.java:538)
	at com.jizhi.service.impl.ProfitsServiceImpl.NFCToFeed(ProfitsServiceImpl.java:239)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy90.NFCToFeed(Unknown Source)
	at com.jizhi.controller.ProfitsController.NFCToFeed(ProfitsController.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-15 19:06:23,455 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 19:06:23,457 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 19:06:23,460 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 19:06:23,461 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:06:23,462 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 19:06:23,466 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:06:23,467 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:06:23,468 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 19:06:23,470 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:06:23,474 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-15 19:06:23,475 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-15 19:06:23,477 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-15 19:06:23,478 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:06:23,478 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-15 19:06:23,481 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:06:23,482 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-15 19:06:23,483 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-15 19:06:23,485 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-15 19:06:23,488 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:06:23,489 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-15 19:06:23,490 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:06:23,492 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:06:23,493 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-15 19:06:23,495 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:06:23,498 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:06:23,499 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-15 19:06:23,500 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:06:23,502 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-15 19:06:23,502 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-15(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-15 19:06:23,503 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-15 19:06:23,504 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-15 19:06:23,504 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-15 19:06:23,505 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-15 19:06:23,507 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-15 19:06:23,508 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-15 19:06:23,508 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
