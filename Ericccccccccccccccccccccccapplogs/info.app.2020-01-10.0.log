2020-01-10 11:27:52,273 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 6700 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 11:27:52,281 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 11:27:52,281 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 11:27:52,339 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 11:27:52 CST 2020]; root of context hierarchy
2020-01-10 11:27:52,710 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 11:27:53,236 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 11:27:54,384 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 11:27:54,404 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 11:27:54,406 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 11:27:54,535 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 11:27:54,535 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2196 ms
2020-01-10 11:27:54,683 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 11:27:54,688 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 11:27:54,689 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 11:27:54,689 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 11:27:54,689 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 11:27:55,971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 11:27:52 CST 2020]; root of context hierarchy
2020-01-10 11:27:56,120 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,121 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 11:27:56,122 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,125 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 11:27:56,126 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 11:27:56,127 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,127 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,127 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,128 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,129 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 11:27:56,132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 11:27:56,132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 11:27:56,132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 11:27:56,132 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 11:27:56,133 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 11:27:56,134 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 11:27:56,134 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 11:27:56,134 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 11:27:56,136 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,137 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,138 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,138 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 11:27:56,139 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 11:27:56,141 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 11:27:56,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 11:27:56,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 11:27:56,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,142 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,143 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 11:27:56,144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 11:27:56,144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 11:27:56,144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 11:27:56,144 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 11:27:56,146 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 11:27:56,147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-10 11:27:56,147 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,174 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 11:27:56,175 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,175 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,176 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 11:27:56,177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,179 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 11:27:56,180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 11:27:56,242 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:27:56,242 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:27:56,242 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:27:56,315 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:27:56,744 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 11:27:56,756 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 11:27:56,771 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 11:27:56,783 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 11:27:56,793 [pool-2-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 11:27:56,801 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-10 11:27:56,836 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-10 11:27:56,842 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.93 seconds (JVM running for 5.393)
2020-01-10 11:27:57,073 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:27:57,098 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:27:57,114 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:27:57,115 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:27:57,116 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:27:57,117 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:27:57,118 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:27:57,118 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:27:57,120 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:27:57,124 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:27:57,125 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:27:57,127 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:27:57,127 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:27:57,128 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:27:57,129 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:27:57,129 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:27:57,130 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:27:57,131 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:27:57,134 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:27:57,135 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:27:57,136 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:27:57,138 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:27:57,139 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:27:57,141 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:27:57,147 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:27:57,148 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:27:57,149 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:27:57,151 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:27:57,152 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:27:57,153 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:30:56,779 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:30:56,780 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:30:56,784 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:30:56,785 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:30:56,786 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:30:56,789 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:30:56,790 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:30:56,791 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:30:56,793 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:30:56,797 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:30:56,798 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:30:56,800 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:30:56,801 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:30:56,802 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:30:56,804 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:30:56,805 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:30:56,806 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:30:56,807 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:30:56,809 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:30:56,810 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:30:56,812 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:30:56,814 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:30:56,815 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:30:56,816 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:30:56,817 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:30:56,818 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:30:56,818 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:30:56,820 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:30:56,821 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:30:56,823 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:32:27,743 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 9032 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 11:32:27,745 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 11:32:27,746 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 11:32:27,795 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 11:32:27 CST 2020]; root of context hierarchy
2020-01-10 11:32:28,222 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 11:32:28,694 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 11:32:29,882 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 11:32:29,901 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 11:32:29,903 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 11:32:30,007 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 11:32:30,007 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2213 ms
2020-01-10 11:32:30,155 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 11:32:30,159 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 11:32:30,160 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 11:32:30,160 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 11:32:30,160 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 11:32:31,186 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 11:32:27 CST 2020]; root of context hierarchy
2020-01-10 11:32:31,248 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 11:32:31,251 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,251 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,252 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 11:32:31,252 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 11:32:31,253 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,253 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,254 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,255 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 11:32:31,256 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,256 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,256 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,259 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 11:32:31,259 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 11:32:31,259 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 11:32:31,259 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 11:32:31,260 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 11:32:31,260 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 11:32:31,261 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 11:32:31,261 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 11:32:31,261 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,262 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,262 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,262 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 11:32:31,263 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 11:32:31,264 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,264 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 11:32:31,264 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 11:32:31,264 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,264 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,267 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 11:32:31,268 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,268 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 11:32:31,269 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 11:32:31,269 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 11:32:31,269 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 11:32:31,269 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 11:32:31,271 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 11:32:31,273 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 11:32:31,273 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public java.lang.String com.jizhi.controller.UserController.login()
2020-01-10 11:32:31,273 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 11:32:31,274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,275 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,275 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,277 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 11:32:31,277 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 11:32:31,308 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:32:31,308 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:32:31,308 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:32:31,388 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:32:31,662 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 11:32:31,674 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 11:32:31,688 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 11:32:31,698 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 11:32:31,703 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 11:32:31,716 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-10 11:32:31,750 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-10 11:32:31,758 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.379 seconds (JVM running for 4.841)
2020-01-10 11:32:31,993 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:32:32,039 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:32:32,059 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:32:32,068 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:32:32,069 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:32:32,071 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:32:32,073 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:32:32,074 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:32:32,075 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:32:32,090 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:32:32,091 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:32:32,092 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:32:32,094 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:32:32,094 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:32:32,098 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:32:32,099 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:32:32,099 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:32:32,101 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:32:32,103 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:32:32,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:32:32,105 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:32:32,107 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:32:32,108 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:32:32,111 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:32:32,113 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:32:32,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:32:32,115 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:32:32,118 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:32:32,119 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:32:32,120 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:35:31,696 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:35:31,697 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:35:31,700 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:35:31,701 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:35:31,701 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:35:31,703 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:35:31,703 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:35:31,704 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:35:31,705 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:35:31,709 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:35:31,709 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:35:31,711 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:35:31,712 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:35:31,713 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:35:31,715 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:35:31,716 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:35:31,718 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:35:31,721 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:35:31,725 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:35:31,726 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:35:31,727 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:35:31,729 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:35:31,729 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:35:31,730 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:35:31,732 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:35:31,732 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:35:31,733 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:35:31,735 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:35:31,735 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:35:31,737 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:35:59,907 [http-nio-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-10 11:35:59,907 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-10 11:35:59,929 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-01-10 11:40:59,779 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 3320 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 11:40:59,782 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 11:40:59,782 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 11:40:59,843 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 11:40:59 CST 2020]; root of context hierarchy
2020-01-10 11:41:00,489 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 11:41:01,677 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 11:41:03,125 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 11:41:03,148 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 11:41:03,149 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 11:41:03,286 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 11:41:03,286 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3443 ms
2020-01-10 11:41:03,466 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 11:41:03,474 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 11:41:03,474 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 11:41:03,475 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 11:41:03,475 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 11:41:04,788 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 11:40:59 CST 2020]; root of context hierarchy
2020-01-10 11:41:04,870 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,871 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,872 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 11:41:04,872 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 11:41:04,873 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 11:41:04,878 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,878 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,879 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,880 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,880 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,880 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 11:41:04,881 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,884 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 11:41:04,885 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 11:41:04,886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 11:41:04,886 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 11:41:04,892 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 11:41:04,893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 11:41:04,893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 11:41:04,893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 11:41:04,894 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,895 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,895 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,896 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 11:41:04,896 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 11:41:04,898 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 11:41:04,899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 11:41:04,899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 11:41:04,899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,899 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 11:41:04,901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 11:41:04,901 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 11:41:04,902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 11:41:04,902 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 11:41:04,904 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 11:41:04,910 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,912 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,913 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,913 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 11:41:04,914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-10 11:41:04,914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,914 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,916 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 11:41:04,917 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,919 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 11:41:04,920 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 11:41:04,957 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:41:04,958 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:41:04,959 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:41:05,017 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 11:41:05,411 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 11:41:05,424 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 11:41:05,443 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 11:41:05,458 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 11:41:05,465 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 11:41:05,506 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-10 11:41:05,543 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-10 11:41:05,550 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 6.218 seconds (JVM running for 7.0)
2020-01-10 11:41:05,878 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:41:05,911 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:41:05,938 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:41:05,939 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:05,940 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:41:05,942 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:05,943 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:05,943 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:41:05,944 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:05,948 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:41:05,948 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:41:05,950 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:41:05,951 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:05,952 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:41:05,953 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:05,953 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:05,954 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:41:05,955 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:05,959 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:41:05,962 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:41:05,963 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:41:05,965 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:41:05,966 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:41:05,968 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:41:05,973 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:41:05,973 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:41:05,974 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:41:05,978 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:41:05,978 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:41:05,979 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:41:16,404 [http-nio-8090-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-10 11:41:16,405 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-10 11:41:16,431 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2020-01-10 11:41:16,536 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-10 11:41:16,537 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-10 11:41:16,539 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-10 11:41:16,540 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-10 11:41:16,541 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-10 11:41:16,542 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:41:16,543 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:41:16,545 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:41:16,546 [http-nio-8090-exec-10] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:16,547 [http-nio-8090-exec-10] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:41:16,550 [http-nio-8090-exec-10] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:16,550 [http-nio-8090-exec-10] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:16,551 [http-nio-8090-exec-10] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:41:16,553 [http-nio-8090-exec-10] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:16,555 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-10 11:41:23,375 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:41:23,377 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 8(Integer)
2020-01-10 11:41:23,379 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:41:23,379 [http-nio-8090-exec-9] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:41:23,380 [http-nio-8090-exec-9] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 8(Integer)
2020-01-10 11:41:23,383 [http-nio-8090-exec-9] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:41:23,384 [http-nio-8090-exec-9] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:41:23,385 [http-nio-8090-exec-9] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 8(Integer)
2020-01-10 11:41:23,387 [http-nio-8090-exec-9] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:41:23,388 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:41:23,389 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 8(Integer)
2020-01-10 11:41:23,391 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:41:23,392 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:41:23,393 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 8(Integer)
2020-01-10 11:41:23,394 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:41:32,163 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:41:32,164 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 13666154571(String)
2020-01-10 11:41:32,165 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 11:41:32,168 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 11:41:32,169 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: 80785b9d427ecfe07bc4ae8625d464f3(String), 13666154571(String)
2020-01-10 11:41:32,171 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 11:41:32,298 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:41:32,299 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:41:32,300 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:41:32,301 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:32,301 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:41:32,302 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:32,303 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:32,303 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:41:32,307 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:34,969 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:41:34,970 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:41:34,973 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:41:34,974 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:34,975 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:41:34,977 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:41:34,977 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:41:34,978 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:41:34,980 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:44:05,453 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:44:05,455 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:44:05,458 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:44:05,459 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:44:05,460 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:44:05,463 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:44:05,465 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:44:05,466 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:44:05,468 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:44:05,474 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:44:05,475 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:44:05,476 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:44:05,477 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:44:05,477 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:44:05,479 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:44:05,479 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:44:05,479 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:44:05,481 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:44:05,484 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:44:05,485 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:44:05,486 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:44:05,488 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:44:05,489 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:44:05,490 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:44:05,492 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:44:05,493 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:44:05,495 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:44:05,497 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:44:05,497 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:44:05,498 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:45:35,540 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-10 11:45:35,541 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-10 11:45:35,545 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-10 11:45:35,546 [http-nio-8090-exec-3] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-10 11:45:35,547 [http-nio-8090-exec-3] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-10 11:45:35,549 [http-nio-8090-exec-3] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-10 11:45:35,554 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:45:35,556 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:45:35,562 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:45:35,563 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:45:35,563 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:45:35,565 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:45:35,566 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:45:35,566 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:45:35,567 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:45:40,529 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:45:40,530 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:40,532 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:45:40,533 [http-nio-8090-exec-10] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:45:40,534 [http-nio-8090-exec-10] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:40,536 [http-nio-8090-exec-10] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:45:40,537 [http-nio-8090-exec-10] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:45:40,538 [http-nio-8090-exec-10] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:40,541 [http-nio-8090-exec-10] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:45:40,542 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:45:40,544 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:40,547 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:45:40,548 [http-nio-8090-exec-10] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:45:40,550 [http-nio-8090-exec-10] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:40,551 [http-nio-8090-exec-10] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:45:41,484 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:45:41,485 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:41,486 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:45:41,486 [http-nio-8090-exec-8] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:45:41,487 [http-nio-8090-exec-8] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:41,488 [http-nio-8090-exec-8] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:45:41,488 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:45:41,489 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:41,491 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:45:41,493 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:45:41,494 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:41,495 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:45:41,496 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:45:41,496 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:41,497 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:45:43,045 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:45:43,046 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:45:43,049 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:45:43,050 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:45:43,051 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:45:43,053 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:45:43,054 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:45:43,055 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:45:43,057 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:45:44,085 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:45:44,086 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:44,087 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:45:44,087 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:45:44,088 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:44,090 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:45:44,091 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:45:44,093 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:44,094 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:45:44,095 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:45:44,096 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:44,097 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:45:44,097 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:45:44,098 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 7(Integer)
2020-01-10 11:45:44,098 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:45:45,299 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:45:45,300 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:45:45,301 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:45:45,302 [http-nio-8090-exec-6] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:45:45,302 [http-nio-8090-exec-6] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:45:45,304 [http-nio-8090-exec-6] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:45:45,305 [http-nio-8090-exec-6] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:45:45,306 [http-nio-8090-exec-6] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:45:45,307 [http-nio-8090-exec-6] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:46:15,127 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:46:15,129 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 7(Integer)
2020-01-10 11:46:15,131 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:46:15,132 [http-nio-8090-exec-5] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:46:15,133 [http-nio-8090-exec-5] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 7(Integer)
2020-01-10 11:46:15,135 [http-nio-8090-exec-5] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:46:15,136 [http-nio-8090-exec-5] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:46:15,136 [http-nio-8090-exec-5] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 7(Integer)
2020-01-10 11:46:15,137 [http-nio-8090-exec-5] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:46:15,138 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:46:15,138 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 7(Integer)
2020-01-10 11:46:15,139 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:46:15,140 [http-nio-8090-exec-5] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:46:15,141 [http-nio-8090-exec-5] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 7(Integer)
2020-01-10 11:46:15,142 [http-nio-8090-exec-5] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:47:05,437 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:47:05,438 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:47:05,440 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:47:05,441 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:47:05,442 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:47:05,444 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:47:05,444 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:47:05,445 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:47:05,446 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:47:05,450 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:47:05,451 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:47:05,453 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:47:05,454 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:47:05,454 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:47:05,456 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:47:05,457 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:47:05,458 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:47:05,459 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:47:05,462 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:47:05,463 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:47:05,465 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:47:05,467 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:47:05,469 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:47:05,471 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:47:05,474 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:47:05,474 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:47:05,475 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:47:05,477 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:47:05,477 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:47:05,477 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:47:30,376 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:47:30,377 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:47:30,378 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:47:30,379 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:47:30,379 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), aaa111(String), aaa111(String), 18381855237(String), 000000(String), null
2020-01-10 11:47:30,390 [http-nio-8090-exec-2] INFO  o.s.b.f.xml.XmlBeanDefinitionReader 317 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-01-10 11:47:30,428 [http-nio-8090-exec-2] INFO  o.s.j.support.SQLErrorCodesFactory 127 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2020-01-10 11:47:30,441 [http-nio-8090-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:47:41,870 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:47:41,870 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:47:41,872 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:47:41,873 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:47:41,874 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), aaa111(String), aaa111(String), 18381855237(String), 000000(String), null
2020-01-10 11:47:41,879 [http-nio-8090-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:48:59,691 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:48:59,693 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:48:59,695 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:48:59,697 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:48:59,699 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), aaa111(String), 123456(String), 18381855237(String), 18200295737(String), null
2020-01-10 11:48:59,705 [http-nio-8090-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:49:49,035 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:49:49,036 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:49:49,037 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:49:49,039 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:49:49,040 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), aaa111(String), 123456(String), 18381855237(String), 18200295737(String), null
2020-01-10 11:49:49,043 [http-nio-8090-exec-9] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:49:52,128 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:49:52,129 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:49:52,130 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:49:52,132 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:49:52,133 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), aaa111(String), 123456(String), 18381855237(String), 18200295737(String), null
2020-01-10 11:49:52,136 [http-nio-8090-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:50:05,437 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:50:05,438 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:50:05,439 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:50:05,440 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:50:05,440 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:50:05,441 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:50:05,442 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:50:05,442 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:50:05,443 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:50:05,445 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:50:05,446 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:50:05,447 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:50:05,448 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:50:05,448 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:50:05,449 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:50:05,450 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:50:05,450 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:50:05,452 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:50:05,454 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:50:05,455 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:50:05,456 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:50:05,458 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:50:05,458 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:50:05,459 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:50:05,461 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:50:05,461 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:50:05,462 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:50:05,463 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:50:05,464 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:50:05,465 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:50:32,697 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:50:32,698 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:50:32,700 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:50:32,702 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:50:32,703 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), aaa111(String), 123456(String), 18381855237(String), 18200295737(String), null
2020-01-10 11:50:32,709 [http-nio-8090-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:50:50,458 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:50:50,459 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-10 11:50:50,462 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 11:51:18,699 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:51:18,701 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-10 11:51:18,703 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 11:51:18,706 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 11:51:18,707 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: 80785b9d427ecfe07bc4ae8625d464f3(String), 18200295737(String)
2020-01-10 11:51:18,709 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 11:51:18,887 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:51:18,887 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:51:18,888 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:51:18,888 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:51:18,889 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:51:18,890 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:51:18,890 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:51:18,890 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:51:18,891 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:51:20,453 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:51:20,456 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:51:20,459 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:51:20,460 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:51:20,462 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:51:20,464 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:51:20,465 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:51:20,466 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:51:20,468 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:51:49,165 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:51:49,166 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:49,167 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:51:49,168 [http-nio-8090-exec-1] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:51:49,168 [http-nio-8090-exec-1] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:49,169 [http-nio-8090-exec-1] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:51:49,169 [http-nio-8090-exec-1] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:51:49,170 [http-nio-8090-exec-1] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:49,170 [http-nio-8090-exec-1] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:51:49,171 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:51:49,172 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:49,172 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:51:49,173 [http-nio-8090-exec-1] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:51:49,173 [http-nio-8090-exec-1] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:49,174 [http-nio-8090-exec-1] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:51:54,769 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.OtherInfoDao.query 159 - ==>  Preparing: select * from other_info 
2020-01-10 11:51:54,770 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.OtherInfoDao.query 159 - ==> Parameters: 
2020-01-10 11:51:54,773 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.OtherInfoDao.query 159 - <==      Total: 1
2020-01-10 11:51:58,789 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:51:58,790 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:58,792 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:51:58,793 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 11:51:58,794 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 111111(String)
2020-01-10 11:51:58,796 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 1
2020-01-10 11:51:58,798 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:51:58,799 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 11:51:58,800 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:51:58,802 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllShareProfitToOthers 159 - ==>  Preparing: select sum(shareProfit) from profits where userId=? and sharerId=? 
2020-01-10 11:51:58,803 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllShareProfitToOthers 159 - ==> Parameters: 7(Integer), 5(Integer)
2020-01-10 11:51:58,804 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllShareProfitToOthers 159 - <==      Total: 1
2020-01-10 11:51:58,805 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 11:51:58,806 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 580316(String)
2020-01-10 11:51:58,807 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 0
2020-01-10 11:52:03,751 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:52:03,752 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:52:03,755 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:52:03,756 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:52:03,757 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:52:03,759 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:52:03,761 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:52:03,762 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:52:03,764 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:52:06,476 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:52:06,477 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:52:06,480 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:52:06,481 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:52:06,482 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-10 11:52:06,485 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:52:06,486 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:52:06,487 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-10 11:52:06,489 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:52:06,491 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:52:06,492 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-10 11:52:06,494 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:52:06,496 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:52:06,496 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 11:52:06,497 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:53:05,438 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:53:05,439 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:53:05,442 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:53:05,443 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:53:05,444 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:53:05,446 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:53:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:53:05,448 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:53:05,449 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:53:05,456 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:53:05,457 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:53:05,461 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:53:05,463 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:53:05,463 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:53:05,466 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:53:05,467 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:53:05,468 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:53:05,471 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:53:05,475 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:53:05,476 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:53:05,477 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:53:05,479 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:53:05,479 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:53:05,480 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:53:05,482 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:53:05,482 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:53:05,483 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:53:05,485 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:53:05,485 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:53:05,486 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:53:19,158 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:53:19,159 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:53:19,161 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:53:19,163 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:53:19,164 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), a123456(String), 123456(String), 18381855237(String), 222222(String), null
2020-01-10 11:53:19,170 [http-nio-8090-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:53:22,308 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:53:22,309 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:53:22,310 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:53:22,311 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:53:22,312 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), a123456(String), 123456(String), 18381855237(String), 222222(String), null
2020-01-10 11:53:22,316 [http-nio-8090-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:53:25,915 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:53:25,916 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18381855237(String)
2020-01-10 11:53:25,917 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:53:25,919 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.save 159 - ==>  Preparing: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid) values (?,?,?,?,?,?) 
2020-01-10 11:53:25,920 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.save 159 - ==> Parameters: 18381855237(String), a123456(String), 123456(String), 18381855237(String), 222222(String), null
2020-01-10 11:53:25,925 [http-nio-8090-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
### The error may involve com.jizhi.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into user(tel,password,secondpsw,inviteCode,invitedCode,cid)    values    (?,?,?,?,?,?)
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
; SQL []; Data truncation: Data too long for column 'inviteCode' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1] with root cause
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Data too long for column 'inviteCode' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3971)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy79.save(Unknown Source)
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:123)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:55:46,260 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:55:46,261 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-10 11:55:46,264 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 11:55:46,266 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 11:55:46,267 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: 80785b9d427ecfe07bc4ae8625d464f3(String), 18200295737(String)
2020-01-10 11:55:46,270 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 11:55:46,525 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:55:46,526 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:55:46,528 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:55:46,530 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:55:46,531 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:55:46,533 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:55:46,535 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:55:46,536 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:55:46,538 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:55:53,790 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:55:53,791 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:55:53,793 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:55:53,795 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:55:53,796 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-10 11:55:53,798 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:55:53,800 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:55:53,801 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-10 11:55:53,803 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:55:53,804 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:55:53,805 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-10 11:55:53,806 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:55:53,807 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:55:53,807 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 11:55:53,809 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:56:04,790 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:56:04,791 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:04,792 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:04,793 [http-nio-8090-exec-6] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:56:04,794 [http-nio-8090-exec-6] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:04,796 [http-nio-8090-exec-6] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:56:04,797 [http-nio-8090-exec-6] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:56:04,798 [http-nio-8090-exec-6] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:04,799 [http-nio-8090-exec-6] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:56:04,800 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:56:04,801 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:04,802 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:56:04,804 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:56:04,804 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:04,806 [http-nio-8090-exec-6] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:56:05,436 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:56:05,437 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:56:05,438 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:56:05,439 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:05,439 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:05,440 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:05,440 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:05,441 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:56:05,442 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:05,444 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:56:05,444 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:56:05,445 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:56:05,446 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:05,446 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:56:05,448 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:05,450 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:56:05,451 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:56:05,451 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:56:05,453 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:56:05,453 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:56:05,454 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:56:05,455 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:56:05,455 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:56:05,456 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:56:05,457 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:56:05,458 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:56:05,458 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:56:15,483 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:56:15,484 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:15,488 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:17,652 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:56:17,653 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:56:17,656 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:56:17,656 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:17,657 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:17,658 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:17,659 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:17,659 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:56:17,660 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:29,022 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:56:29,022 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:29,023 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:29,030 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:29,031 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:29,032 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:29,033 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 11:56:29,034 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:29,035 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:29,037 [http-nio-8090-exec-2] DEBUG c.j.d.OrderDao.queryByUserIdAndTime 159 - ==>  Preparing: select userId,animalId,date,time,state,role from orders where userId=? and animalId=? and time=? and flag=0 
2020-01-10 11:56:29,037 [http-nio-8090-exec-2] DEBUG c.j.d.OrderDao.queryByUserIdAndTime 159 - ==> Parameters: 5(Integer), 1(Integer), 17:30(String)
2020-01-10 11:56:29,038 [http-nio-8090-exec-2] DEBUG c.j.d.OrderDao.queryByUserIdAndTime 159 - <==      Total: 1
2020-01-10 11:56:29,468 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:56:29,469 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:29,471 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:29,473 [http-nio-8090-exec-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:56:29,474 [http-nio-8090-exec-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:29,475 [http-nio-8090-exec-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:56:29,476 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 11:56:29,477 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:29,479 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:29,481 [http-nio-8090-exec-1] DEBUG c.j.d.OrderDao.queryByUserIdAndTime 159 - ==>  Preparing: select userId,animalId,date,time,state,role from orders where userId=? and animalId=? and time=? and flag=0 
2020-01-10 11:56:29,482 [http-nio-8090-exec-1] DEBUG c.j.d.OrderDao.queryByUserIdAndTime 159 - ==> Parameters: 5(Integer), 1(Integer), 17:30(String)
2020-01-10 11:56:29,484 [http-nio-8090-exec-1] DEBUG c.j.d.OrderDao.queryByUserIdAndTime 159 - <==      Total: 1
2020-01-10 11:56:40,604 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 11:56:40,605 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:40,606 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:40,607 [http-nio-8090-exec-10] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-10 11:56:40,608 [http-nio-8090-exec-10] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:40,610 [http-nio-8090-exec-10] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-10 11:56:40,611 [http-nio-8090-exec-10] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-10 11:56:40,612 [http-nio-8090-exec-10] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:40,613 [http-nio-8090-exec-10] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-10 11:56:40,614 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-10 11:56:40,615 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:40,616 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-10 11:56:40,617 [http-nio-8090-exec-10] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 11:56:40,618 [http-nio-8090-exec-10] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:40,619 [http-nio-8090-exec-10] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 11:56:42,389 [http-nio-8090-exec-8] DEBUG c.j.dao.OrderDao.queryAllByUserId 159 - ==>  Preparing: select * from orders where userId=? and flag=0 
2020-01-10 11:56:42,389 [http-nio-8090-exec-8] DEBUG c.j.dao.OrderDao.queryAllByUserId 159 - ==> Parameters: 5(Integer)
2020-01-10 11:56:42,391 [http-nio-8090-exec-8] DEBUG c.j.dao.OrderDao.queryAllByUserId 159 - <==      Total: 1
2020-01-10 11:56:42,392 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 11:56:42,393 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-10 11:56:42,395 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 11:56:42,396 [http-nio-8090-exec-8] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==>  Preparing: select endTime from order_time where animalId=? and startTime=? 
2020-01-10 11:56:42,397 [http-nio-8090-exec-8] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==> Parameters: 1(Integer), 17:30(String)
2020-01-10 11:56:42,400 [http-nio-8090-exec-8] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - <==      Total: 1
2020-01-10 11:58:33,757 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:58:33,758 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 12345678900(String)
2020-01-10 11:58:33,759 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:58:33,761 [http-nio-8090-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 11:59:05,438 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:59:05,438 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:59:05,439 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:59:05,440 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:59:05,440 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:59:05,441 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:59:05,441 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:59:05,441 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:59:05,442 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:59:05,444 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 11:59:05,444 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 11:59:05,445 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 11:59:05,445 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:59:05,446 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 11:59:05,446 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:59:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 11:59:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 11:59:05,447 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 11:59:05,449 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:59:05,450 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 11:59:05,451 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:59:05,452 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 11:59:05,452 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 11:59:05,453 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 11:59:05,455 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 11:59:05,455 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 11:59:05,456 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 11:59:05,457 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 11:59:05,458 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 11:59:05,458 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 11:59:25,844 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 11:59:25,845 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 12345678900(String)
2020-01-10 11:59:25,845 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 0
2020-01-10 11:59:25,847 [http-nio-8090-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause
java.lang.NullPointerException: null
	at com.jizhi.service.impl.UserServiceImpl.save(UserServiceImpl.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy89.save(Unknown Source)
	at com.jizhi.controller.UserController.register(UserController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-10 17:33:50,502 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 13960 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 17:33:50,520 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 17:33:50,520 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 17:33:50,661 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Fri Jan 10 17:33:50 CST 2020]; root of context hierarchy
2020-01-10 17:33:51,966 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 17:33:53,346 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 17:33:55,244 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 17:33:55,263 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 17:33:55,265 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 17:33:55,573 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 17:33:55,573 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 4912 ms
2020-01-10 17:33:55,901 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 17:33:55,908 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 17:33:55,910 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 17:33:55,910 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 17:33:55,910 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 17:33:57,966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Fri Jan 10 17:33:50 CST 2020]; root of context hierarchy
2020-01-10 17:33:58,237 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 17:33:58,239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,243 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 17:33:58,245 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 17:33:58,247 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,247 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,248 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,249 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,250 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,250 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 17:33:58,250 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,265 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 17:33:58,266 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 17:33:58,272 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 17:33:58,274 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 17:33:58,280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 17:33:58,280 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 17:33:58,281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 17:33:58,281 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 17:33:58,283 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,285 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,286 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,287 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 17:33:58,288 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 17:33:58,295 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,297 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,297 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,298 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 17:33:58,299 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 17:33:58,300 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 17:33:58,301 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 17:33:58,302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 17:33:58,302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 17:33:58,302 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 17:33:58,303 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 17:33:58,306 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 17:33:58,310 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,312 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-10 17:33:58,313 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,314 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 17:33:58,314 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 17:33:58,315 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,316 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,317 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,318 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,322 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 17:33:58,323 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 17:33:58,557 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:33:58,558 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:33:58,558 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:33:58,814 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:34:00,035 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 17:34:00,051 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 17:34:00,097 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 17:34:00,111 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 17:34:00,143 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 17:34:00,172 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-10 17:34:00,276 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-10 17:34:00,284 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 10.924 seconds (JVM running for 11.918)
2020-01-10 17:34:00,771 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:34:00,847 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:34:00,860 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:34:00,862 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:34:00,862 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:34:00,865 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:34:00,866 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:34:00,866 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:34:00,868 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:34:00,873 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:34:00,873 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:34:00,877 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:34:00,877 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:34:00,878 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:34:00,879 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:34:00,880 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:34:00,880 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:34:00,882 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:34:00,887 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:34:00,887 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 17:34:00,889 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:34:00,893 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:34:00,895 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 17:34:00,898 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:34:00,901 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:34:00,902 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 17:34:00,904 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:34:00,906 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:34:00,908 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-10 17:34:00,910 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:34:00,912 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 17:34:00,913 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 17:34:00,915 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 17:34:00,921 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 17:34:00,923 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 17:34:00,926 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 17:35:16,751 [http-nio-8090-exec-9] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-10 17:35:16,751 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-10 17:35:16,783 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2020-01-10 17:35:16,928 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 17:35:16,929 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 19942363611(String)
2020-01-10 17:35:16,930 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 17:35:16,999 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 17:35:16,999 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 19942363611(String)
2020-01-10 17:35:17,001 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 17:35:46,241 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 17:35:46,242 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 19942363611(String)
2020-01-10 17:35:46,243 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 17:35:46,245 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 17:35:46,246 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 19942363611(String)
2020-01-10 17:35:46,248 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 17:36:18,273 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 17:36:18,282 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 10(Integer)
2020-01-10 17:36:18,324 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 17:36:26,062 [http-nio-8090-exec-5] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 17:36:26,069 [http-nio-8090-exec-5] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 18381855237(String)
2020-01-10 17:36:26,091 [http-nio-8090-exec-5] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 0
2020-01-10 17:36:28,121 [http-nio-8090-exec-5] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 17:36:28,129 [http-nio-8090-exec-5] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 10(Integer)
2020-01-10 17:36:28,191 [http-nio-8090-exec-5] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 17:37:00,082 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:37:00,083 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:37:00,085 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:37:00,085 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:37:00,086 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:37:00,087 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:37:00,087 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:37:00,087 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:37:00,089 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:37:00,092 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:37:00,092 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:37:00,093 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:37:00,094 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:37:00,094 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:37:00,095 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:37:00,095 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:37:00,096 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:37:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:37:00,099 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:37:00,100 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 17:37:00,101 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:37:00,102 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:37:00,103 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 17:37:00,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:37:00,105 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:37:00,106 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 17:37:00,107 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:37:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:37:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-10 17:37:00,110 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:37:00,112 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 17:37:00,112 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 17:37:00,113 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 17:37:00,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 17:37:00,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 17:37:00,115 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 17:38:50,781 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 17:38:50,789 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 10(Integer)
2020-01-10 17:38:50,832 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 17:38:51,661 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 17:38:51,668 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 18381855237(String)
2020-01-10 17:38:51,681 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 0
2020-01-10 17:38:52,002 [http-nio-8090-exec-2] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 17:38:52,009 [http-nio-8090-exec-2] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 10(Integer)
2020-01-10 17:38:52,019 [http-nio-8090-exec-2] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 17:40:00,087 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:40:00,087 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:40:00,089 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:40:00,089 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:40:00,089 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:40:00,090 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:40:00,091 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:40:00,091 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:40:00,092 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:40:00,094 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:40:00,094 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:40:00,095 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:40:00,096 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:40:00,096 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:40:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:40:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:40:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:40:00,098 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:40:00,100 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:40:00,100 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 17:40:00,101 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:40:00,103 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:40:00,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 17:40:00,105 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:40:00,106 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:40:00,106 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 17:40:00,107 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:40:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:40:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-10 17:40:00,110 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:40:00,111 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 17:40:00,112 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 17:40:00,112 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 17:40:00,112 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 17:40:00,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 17:40:00,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 17:43:00,089 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:43:00,089 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:43:00,091 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:43:00,091 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:43:00,092 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:43:00,093 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:43:00,093 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:43:00,093 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:43:00,094 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:43:00,096 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:43:00,096 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:43:00,099 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:43:00,099 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:43:00,099 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:43:00,101 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:43:00,101 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:43:00,101 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:43:00,102 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:43:00,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:43:00,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 17:43:00,105 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:43:00,106 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:43:00,107 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 17:43:00,108 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:43:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:43:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 17:43:00,110 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:43:00,111 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:43:00,113 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-10 17:43:00,113 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:43:00,115 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 17:43:00,115 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 17:43:00,116 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 17:43:00,117 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 17:43:00,117 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 17:43:00,118 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 17:46:00,088 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:46:00,088 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:46:00,089 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:46:00,090 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:46:00,090 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:46:00,091 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:46:00,091 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:46:00,092 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:46:00,092 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:46:00,094 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:46:00,095 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:46:00,096 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:46:00,096 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:46:00,096 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:46:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:46:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:46:00,097 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:46:00,098 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:46:00,100 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:46:00,101 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 17:46:00,102 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:46:00,103 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:46:00,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 17:46:00,104 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:46:00,106 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:46:00,106 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 17:46:00,107 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:46:00,108 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:46:00,109 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-10 17:46:00,110 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:46:00,111 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 17:46:00,111 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 17:46:00,112 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 17:46:00,113 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 17:46:00,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 17:46:00,114 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 17:47:29,859 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 1320 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 17:47:29,862 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 17:47:29,862 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 17:47:29,916 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 17:47:29 CST 2020]; root of context hierarchy
2020-01-10 17:47:30,328 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 17:47:31,247 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 17:47:33,221 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 17:47:33,247 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 17:47:33,249 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 17:47:33,359 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 17:47:33,359 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3443 ms
2020-01-10 17:47:33,509 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 17:47:33,513 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 17:47:33,514 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 17:47:33,514 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 17:47:33,514 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 17:47:34,734 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 17:47:29 CST 2020]; root of context hierarchy
2020-01-10 17:47:34,803 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,804 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 17:47:34,804 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,805 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 17:47:34,806 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 17:47:34,808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,808 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,809 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,810 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,810 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,810 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 17:47:34,811 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 17:47:34,814 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 17:47:34,815 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 17:47:34,815 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 17:47:34,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 17:47:34,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 17:47:34,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 17:47:34,816 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 17:47:34,817 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,817 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,818 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,818 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 17:47:34,819 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 17:47:34,821 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 17:47:34,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 17:47:34,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 17:47:34,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,822 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,823 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 17:47:34,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 17:47:34,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 17:47:34,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 17:47:34,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 17:47:34,826 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 17:47:34,827 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 17:47:34,827 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,828 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 17:47:34,828 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,828 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-10 17:47:34,829 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,829 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,829 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,830 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,831 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 17:47:34,832 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 17:47:34,862 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:47:34,862 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:47:34,862 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:47:34,904 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 17:47:35,276 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 17:47:35,288 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 17:47:35,307 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 17:47:35,318 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 17:47:35,317 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 17:47:35,338 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-10 17:47:35,374 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-10 17:47:35,384 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 5.898 seconds (JVM running for 6.358)
2020-01-10 17:47:35,641 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:47:35,669 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:47:35,680 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:47:35,682 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:47:35,683 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:47:35,684 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:47:35,684 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:47:35,685 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:47:35,685 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:47:35,688 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 17:47:35,688 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 17:47:35,690 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 17:47:35,690 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:47:35,691 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 17:47:35,692 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:47:35,693 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 17:47:35,693 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 17:47:35,697 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 17:47:35,701 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:47:35,701 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 17:47:35,703 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:47:35,705 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:47:35,705 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 17:47:35,707 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:47:35,710 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:47:35,711 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 17:47:35,711 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:47:35,713 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 17:47:35,714 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 2(Integer), 0(Integer)
2020-01-10 17:47:35,715 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 17:47:35,717 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 17:47:35,717 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 17:47:35,718 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 17:47:35,721 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 17:47:35,721 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 17:47:35,722 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 17:47:45,875 [http-nio-8090-exec-9] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-10 17:47:45,875 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-10 17:47:45,899 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2020-01-10 17:47:45,975 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 17:47:45,975 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 19942363611(String)
2020-01-10 17:47:45,977 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 17:47:46,019 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 17:47:46,020 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 19942363611(String)
2020-01-10 17:47:46,021 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 17:48:04,913 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 17:48:04,914 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 10(Integer)
2020-01-10 17:48:04,915 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 17:48:04,916 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 17:48:04,917 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 18381855237(String)
2020-01-10 17:48:04,918 [http-nio-8090-exec-8] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 0
2020-01-10 17:48:04,919 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 17:48:04,920 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 10(Integer)
2020-01-10 17:48:04,924 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 17:48:47,680 [http-nio-8090-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver 384 - Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Could not read JSON document: Invalid numeric value: Leading zeroes not allowed
 at [Source: java.io.PushbackInputStream@404c758d; line: 2, column: 9]; nested exception is com.fasterxml.jackson.core.JsonParseException: Invalid numeric value: Leading zeroes not allowed
 at [Source: java.io.PushbackInputStream@404c758d; line: 2, column: 9]
2020-01-10 17:49:01,375 [http-nio-8090-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver 384 - Failed to read HTTP message: org.springframework.http.converter.HttpMessageNotReadableException: Could not read JSON document: Invalid numeric value: Leading zeroes not allowed
 at [Source: java.io.PushbackInputStream@6bfe8b61; line: 2, column: 9]; nested exception is com.fasterxml.jackson.core.JsonParseException: Invalid numeric value: Leading zeroes not allowed
 at [Source: java.io.PushbackInputStream@6bfe8b61; line: 2, column: 9]
2020-01-10 17:49:55,446 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-10 17:49:55,448 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18580938797(String)
2020-01-10 17:49:55,451 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-10 17:49:55,452 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-10 17:49:55,453 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18580938797(String)
2020-01-10 17:49:55,457 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-10 17:50:12,665 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 17:50:12,666 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-10 17:50:12,667 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 17:50:12,668 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 17:50:12,668 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 111111(String)
2020-01-10 17:50:12,669 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 1
2020-01-10 17:50:12,670 [http-nio-8090-exec-2] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-10 17:50:12,671 [http-nio-8090-exec-2] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-10 17:50:12,673 [http-nio-8090-exec-2] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-10 17:50:12,675 [http-nio-8090-exec-2] DEBUG c.j.d.P.queryAllShareProfitToOthers 159 - ==>  Preparing: select sum(shareProfit) from profits where userId=? and sharerId=? 
2020-01-10 17:50:12,676 [http-nio-8090-exec-2] DEBUG c.j.d.P.queryAllShareProfitToOthers 159 - ==> Parameters: 7(Integer), 5(Integer)
2020-01-10 17:50:12,677 [http-nio-8090-exec-2] DEBUG c.j.d.P.queryAllShareProfitToOthers 159 - <==      Total: 1
2020-01-10 17:50:12,678 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==>  Preparing: select * from user where invitedCode=? 
2020-01-10 17:50:12,679 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - ==> Parameters: 580316(String)
2020-01-10 17:50:12,680 [http-nio-8090-exec-2] DEBUG c.j.dao.UserDao.queryByInvitedCode 159 - <==      Total: 0
2020-01-10 18:26:27,554 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 18688 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 18:26:27,557 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 18:26:27,558 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 18:26:27,609 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 18:26:27 CST 2020]; root of context hierarchy
2020-01-10 18:26:28,033 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 18:26:28,549 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 18:26:29,796 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 18:26:29,824 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 18:26:29,825 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 18:26:30,027 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 18:26:30,027 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2418 ms
2020-01-10 18:26:30,266 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 18:26:30,272 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 18:26:30,273 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 18:26:30,274 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 18:26:30,274 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 18:26:31,418 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 18:26:27 CST 2020]; root of context hierarchy
2020-01-10 18:26:31,487 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,488 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 18:26:31,489 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,489 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 18:26:31,490 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 18:26:31,492 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,492 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,492 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,493 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 18:26:31,494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,494 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,497 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 18:26:31,498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 18:26:31,498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 18:26:31,498 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 18:26:31,499 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 18:26:31,500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 18:26:31,500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 18:26:31,500 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 18:26:31,501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,501 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 18:26:31,502 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 18:26:31,503 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,504 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 18:26:31,506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 18:26:31,506 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 18:26:31,507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 18:26:31,508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 18:26:31,508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 18:26:31,508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 18:26:31,508 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 18:26:31,510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 18:26:31,512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 18:26:31,512 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 18:26:31,513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-10 18:26:31,513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,515 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 18:26:31,516 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 18:26:31,546 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:26:31,546 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:26:31,547 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:26:31,585 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:26:31,866 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 18:26:31,881 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 18:26:31,895 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 18:26:31,909 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 18:26:31,912 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 18:26:31,929 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-10 18:26:31,961 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-10 18:26:31,966 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.778 seconds (JVM running for 5.255)
2020-01-10 18:26:32,253 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:26:32,283 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:26:32,298 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:26:32,300 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:26:32,300 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:26:32,302 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:26:32,303 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:26:32,303 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:26:32,305 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:26:32,313 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:26:32,314 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:26:32,315 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:26:32,318 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-10 18:26:32,319 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-10(String), 14:00(String)
2020-01-10 18:26:32,322 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-10 18:26:32,327 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-10 18:26:32,328 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 14:00(String)
2020-01-10 18:26:32,329 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 1
2020-01-10 18:26:32,331 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryAdmin 159 - ==>  Preparing: select * from user where role=1 
2020-01-10 18:26:32,332 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryAdmin 159 - ==> Parameters: 
2020-01-10 18:26:32,333 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryAdmin 159 - <==      Total: 1
2020-01-10 18:26:32,335 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.insert 159 - ==>  Preparing: insert into orders(userId,animalId,date,time,state,role) values (?,?,?,?,?,?) 
2020-01-10 18:26:32,337 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.insert 159 - ==> Parameters: 4(Integer), 2(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 1(Integer)
2020-01-10 18:26:32,338 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.insert 159 - <==    Updates: 1
2020-01-10 18:26:32,341 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.insert!selectKey 159 - ==>  Preparing: select LAST_INSERT_ID() 
2020-01-10 18:26:32,341 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.insert!selectKey 159 - ==> Parameters: 
2020-01-10 18:26:32,346 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.insert!selectKey 159 - <==      Total: 1
2020-01-10 18:26:32,353 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:26:32,353 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:26:32,354 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:26:32,356 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.add 159 - ==>  Preparing: insert into match_tb(orderId,propertyId,price,buyerConfirm,sellerConfirm) values (?,?,?,?,?) 
2020-01-10 18:26:32,357 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.add 159 - ==> Parameters: 41(Integer), 35(Integer), 259.2(Double), 0(Integer), 0(Integer)
2020-01-10 18:26:32,362 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.add 159 - <==    Updates: 1
2020-01-10 18:26:32,363 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateState 159 - ==>  Preparing: update orders set state=2 where id=? 
2020-01-10 18:26:32,363 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateState 159 - ==> Parameters: 41(Integer)
2020-01-10 18:26:32,364 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateState 159 - <==    Updates: 1
2020-01-10 18:26:32,365 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.updateState 159 - ==>  Preparing: update property set isSold=? where id=? 
2020-01-10 18:26:32,366 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.updateState 159 - ==> Parameters: 1(Integer), 35(Integer)
2020-01-10 18:26:32,369 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.updateState 159 - <==    Updates: 1
2020-01-10 18:26:32,369 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 18:26:32,370 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 4(Integer)
2020-01-10 18:26:32,371 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 18:26:32,371 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-10 18:26:32,371 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 7(Integer)
2020-01-10 18:26:32,373 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-10 18:26:33,050 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:26:33,051 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:26:33,053 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:26:33,054 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:26:33,054 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:26:33,056 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:26:33,056 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:26:33,057 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:26:33,058 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:26:33,060 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:26:33,061 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 18:26:33,062 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:26:33,064 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:26:33,064 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 18:26:33,065 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:26:33,066 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:26:33,067 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 18:26:33,068 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:26:33,078 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 18:26:33,078 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 18:26:33,079 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 1
2020-01-10 18:26:33,080 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==>  Preparing: select * from orders where id=? 
2020-01-10 18:26:33,081 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==> Parameters: 41(Integer)
2020-01-10 18:26:33,082 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - <==      Total: 1
2020-01-10 18:26:33,085 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==>  Preparing: select id,userId,animalId,buyDate,buyTime,price,role,code from property where id=? 
2020-01-10 18:26:33,085 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==> Parameters: 35(Integer)
2020-01-10 18:26:33,086 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - <==      Total: 1
2020-01-10 18:26:33,087 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==>  Preparing: select endTime from order_time where animalId=? and startTime=? 
2020-01-10 18:26:33,088 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==> Parameters: 2(Integer), 14:00(String)
2020-01-10 18:26:33,089 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - <==      Total: 1
2020-01-10 18:26:33,091 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 18:26:33,091 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 18:26:33,092 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 18:26:56,735 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 20024 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-10 18:26:56,737 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-10 18:26:56,737 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-10 18:26:56,786 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 18:26:56 CST 2020]; root of context hierarchy
2020-01-10 18:26:57,311 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-10 18:26:58,052 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-10 18:26:59,177 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-10 18:26:59,199 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-10 18:26:59,200 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-10 18:26:59,329 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-10 18:26:59,330 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2544 ms
2020-01-10 18:26:59,525 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-10 18:26:59,530 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-10 18:26:59,530 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-10 18:26:59,530 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-10 18:26:59,530 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-10 18:27:00,643 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 18:26:56 CST 2020]; root of context hierarchy
2020-01-10 18:27:00,709 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-10 18:27:00,709 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,710 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,710 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-10 18:27:00,710 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-10 18:27:00,711 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,712 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,714 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-10 18:27:00,715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-10 18:27:00,720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-10 18:27:00,720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-10 18:27:00,720 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-10 18:27:00,721 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-10 18:27:00,722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-10 18:27:00,722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-10 18:27:00,722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-10 18:27:00,723 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,723 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,723 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,724 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-10 18:27:00,724 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-10 18:27:00,727 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-10 18:27:00,728 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,728 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,729 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-10 18:27:00,729 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,730 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-10 18:27:00,731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 18:27:00,731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-10 18:27:00,732 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-10 18:27:00,732 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-10 18:27:00,732 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-10 18:27:00,735 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 18:27:00,736 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-10 18:27:00,737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-10 18:27:00,737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-10 18:27:00,738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,738 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-10 18:27:00,742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-10 18:27:00,771 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:27:00,771 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:27:00,771 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:27:00,810 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-10 18:27:01,075 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-10 18:27:01,087 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-10 18:27:01,102 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-10 18:27:01,115 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-10 18:27:01,118 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-10 18:27:01,129 [main] ERROR o.a.coyote.http11.Http11NioProtocol 181 - Failed to start end point associated with ProtocolHandler ["http-nio-8090"]
java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:978)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:628)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.jizhi.QMApplication.main(QMApplication.java:14)
2020-01-10 18:27:01,131 [main] ERROR o.a.catalina.core.StandardService 181 - Failed to start connector [Connector[HTTP/1.1-8090]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8090]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:247)
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:190)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:545)
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:370)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:314)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1162)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1151)
	at com.jizhi.QMApplication.main(QMApplication.java:14)
Caused by: org.apache.catalina.LifecycleException: service.getName(): "Tomcat";  Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1000)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:978)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:628)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:993)
	... 14 common frames omitted
2020-01-10 18:27:01,142 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Pausing ProtocolHandler ["http-nio-8090"]
2020-01-10 18:27:01,142 [main] INFO  o.a.catalina.core.StandardService 179 - Stopping service Tomcat
2020-01-10 18:27:01,160 [main] INFO  o.apache.catalina.util.LifecycleBase 179 - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2020-01-10 18:27:01,160 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Stopping ProtocolHandler ["http-nio-8090"]
2020-01-10 18:27:01,160 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Destroying ProtocolHandler ["http-nio-8090"]
2020-01-10 18:27:01,164 [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer 101 - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2020-01-10 18:27:01,168 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter 42 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8090 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8090, or configure this application to listen on another port.

2020-01-10 18:27:01,169 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 987 - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Fri Jan 10 18:26:56 CST 2020]; root of context hierarchy
2020-01-10 18:27:01,171 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 449 - Unregistering JMX-exposed beans on shutdown
2020-01-10 18:27:01,419 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:27:01,442 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:27:01,452 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:27:01,453 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:27:01,454 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:27:01,455 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:27:01,455 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:27:01,456 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:27:01,456 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:27:01,458 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:27:01,459 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:27:01,461 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:27:01,463 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-10 18:27:01,464 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-10(String), 14:00(String)
2020-01-10 18:27:01,465 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-10 18:27:01,468 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-10 18:27:01,468 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 14:00(String)
2020-01-10 18:27:01,469 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-10 18:29:31,902 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:29:31,903 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:29:31,907 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:29:31,908 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:29:31,908 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:29:31,909 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:29:31,910 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:29:31,911 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:29:31,914 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:29:31,917 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:29:31,918 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:29:31,919 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:29:31,920 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-10 18:29:31,921 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-10(String), 14:00(String)
2020-01-10 18:29:31,922 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-10 18:29:31,924 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-10 18:29:31,925 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 14:00(String)
2020-01-10 18:29:31,926 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-10 18:29:31,928 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:29:31,929 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:29:31,930 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:29:31,931 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:29:31,931 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:29:31,932 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:29:31,932 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:29:31,933 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:29:31,934 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:29:31,936 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:29:31,936 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 18:29:31,937 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:29:31,939 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:29:31,939 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 18:29:31,940 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:29:31,941 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:29:31,942 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 18:29:31,943 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:29:31,945 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 18:29:31,946 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 18:29:31,948 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 1
2020-01-10 18:29:31,950 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==>  Preparing: select * from orders where id=? 
2020-01-10 18:29:31,950 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==> Parameters: 41(Integer)
2020-01-10 18:29:31,951 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - <==      Total: 0
2020-01-10 18:29:31,952 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==>  Preparing: select id,userId,animalId,buyDate,buyTime,price,role,code from property where id=? 
2020-01-10 18:29:31,953 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==> Parameters: 35(Integer)
2020-01-10 18:29:31,953 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - <==      Total: 0
2020-01-10 18:32:31,903 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:32:31,904 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:32:31,905 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:32:31,909 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:32:31,911 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:32:31,914 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:32:31,914 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:32:31,915 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:32:31,916 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:32:31,918 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:32:31,919 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:32:31,920 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:32:31,922 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-10 18:32:31,923 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-10(String), 14:00(String)
2020-01-10 18:32:31,924 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-10 18:32:31,928 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-10 18:32:31,929 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 14:00(String)
2020-01-10 18:32:31,930 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-10 18:32:31,932 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:32:31,933 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:32:31,936 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:32:31,936 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:32:31,936 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:32:31,937 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:32:31,937 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:32:31,938 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:32:31,939 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:32:31,942 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:32:31,942 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 18:32:31,943 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:32:31,946 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:32:31,947 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 18:32:31,948 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:32:31,950 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:32:31,950 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 18:32:31,951 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:32:31,952 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 18:32:31,953 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 18:32:31,953 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 18:32:31,955 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 18:32:31,955 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 18:32:31,956 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 18:35:31,901 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:35:31,902 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:35:31,903 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:35:31,904 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:35:31,904 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:35:31,905 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:35:31,906 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:35:31,906 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:35:31,909 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:35:31,914 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:35:31,914 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:35:31,916 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:35:31,917 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-10 18:35:31,918 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-10(String), 14:00(String)
2020-01-10 18:35:31,919 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-10 18:35:31,920 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-10 18:35:31,920 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 14:00(String)
2020-01-10 18:35:31,921 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-10 18:35:31,923 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:35:31,925 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:35:31,930 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:35:31,930 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:35:31,931 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:35:31,932 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:35:31,932 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:35:31,933 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:35:31,934 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:35:31,935 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:35:31,936 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 18:35:31,937 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:35:31,938 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:35:31,939 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 18:35:31,943 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:35:31,947 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:35:31,948 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 18:35:31,949 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:35:31,950 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 18:35:31,952 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 18:35:31,954 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 18:35:31,963 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 18:35:31,965 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 18:35:31,966 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-10 18:38:31,907 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:38:31,909 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:38:31,913 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:38:31,914 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:38:31,915 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:38:31,917 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:38:31,918 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:38:31,918 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:38:31,919 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:38:31,922 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-10 18:38:31,923 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-10 18:38:31,924 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-10 18:38:31,927 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-10 18:38:31,928 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-10(String), 14:00(String)
2020-01-10 18:38:31,930 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-10 18:38:31,932 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-10 18:38:31,933 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 14:00(String)
2020-01-10 18:38:31,934 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-10 18:38:31,937 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-10 18:38:31,938 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-10 18:38:31,939 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-10 18:38:31,940 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:38:31,940 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-10 18:38:31,941 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:38:31,942 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-10 18:38:31,942 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-10 18:38:31,943 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-10 18:38:31,945 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:38:31,946 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-10 18:38:31,946 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:38:31,948 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:38:31,948 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-10 18:38:31,949 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:38:31,950 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-10 18:38:31,951 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-10(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-10 18:38:31,952 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-10 18:38:31,953 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-10 18:38:31,954 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-10 18:38:31,954 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-10 18:38:31,956 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-10 18:38:31,956 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-10 18:38:31,956 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
