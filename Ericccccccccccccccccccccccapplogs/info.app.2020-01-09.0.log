2020-01-09 17:05:06,616 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 7220 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-09 17:05:06,624 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-09 17:05:06,624 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-09 17:05:06,672 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:05:06 CST 2020]; root of context hierarchy
2020-01-09 17:05:07,066 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-09 17:05:07,560 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-09 17:05:08,737 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-09 17:05:08,750 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-09 17:05:08,751 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-09 17:05:08,857 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-09 17:05:08,857 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2185 ms
2020-01-09 17:05:09,005 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-09 17:05:09,009 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-09 17:05:09,009 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-09 17:05:09,009 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-09 17:05:09,009 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-09 17:05:10,374 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:05:06 CST 2020]; root of context hierarchy
2020-01-09 17:05:10,507 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,509 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-09 17:05:10,510 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-09 17:05:10,511 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-09 17:05:10,513 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,514 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,525 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-09 17:05:10,526 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-09 17:05:10,535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-09 17:05:10,536 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-09 17:05:10,537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-09 17:05:10,549 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-09 17:05:10,550 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-09 17:05:10,550 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-09 17:05:10,550 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-09 17:05:10,551 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,553 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,554 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,554 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-09 17:05:10,555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-09 17:05:10,556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,556 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,557 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,564 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:05:10,572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-09 17:05:10,573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:05:10,579 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:05:10,581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-09 17:05:10,581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-09 17:05:10,581 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-09 17:05:10,582 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:05:10,584 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:05:10,586 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,586 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-09 17:05:10,586 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:05:10,587 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,588 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,589 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,590 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-09 17:05:10,590 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,592 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-09 17:05:10,593 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-09 17:05:10,646 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:05:10,647 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:05:10,679 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:05:10,900 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-09 17:05:10,911 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-09 17:05:10,946 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-09 17:05:10,949 [pool-2-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-09 17:05:10,970 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-09 17:05:10,987 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-09 17:05:11,007 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-09 17:05:11,012 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.785 seconds (JVM running for 5.291)
2020-01-09 17:05:11,243 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:05:11,268 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:05:11,281 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:05:11,283 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:05:11,284 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:05:11,285 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:05:11,285 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:05:11,286 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:05:11,287 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:05:11,290 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:05:11,291 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:05:11,292 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:05:11,294 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:05:11,294 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:05:11,295 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:05:11,299 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:05:11,299 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:05:11,300 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:05:11,303 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:05:11,303 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:05:11,304 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:05:11,305 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:05:11,305 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:05:11,307 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:05:11,308 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:05:11,309 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:05:11,309 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:05:11,311 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:05:11,312 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:05:11,313 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:05:11,314 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:05:11,315 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:05:11,316 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:05:11,319 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:05:11,319 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:05:11,320 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:05:11,322 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:05:11,322 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:05:11,323 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:05:54,513 [http-nio-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-09 17:05:54,513 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-09 17:05:54,535 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2020-01-09 17:07:07,057 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 10580 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-09 17:07:07,059 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-09 17:07:07,059 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-09 17:07:07,116 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:07:07 CST 2020]; root of context hierarchy
2020-01-09 17:07:07,619 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-09 17:07:08,212 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-09 17:07:09,616 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-09 17:07:09,665 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-09 17:07:09,666 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-09 17:07:09,769 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-09 17:07:09,771 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2655 ms
2020-01-09 17:07:09,916 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-09 17:07:09,920 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-09 17:07:09,920 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-09 17:07:09,920 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-09 17:07:09,921 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-09 17:07:10,893 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:07:07 CST 2020]; root of context hierarchy
2020-01-09 17:07:10,960 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,961 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-09 17:07:10,962 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-09 17:07:10,963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-09 17:07:10,964 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-09 17:07:10,966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,966 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-09 17:07:10,971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-09 17:07:10,971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-09 17:07:10,972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-09 17:07:10,973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-09 17:07:10,973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-09 17:07:10,973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-09 17:07:10,973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-09 17:07:10,974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,975 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-09 17:07:10,976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-09 17:07:10,976 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:07:10,977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:07:10,977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-09 17:07:10,977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,977 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-09 17:07:10,980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:07:10,980 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:07:10,981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-09 17:07:10,981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-09 17:07:10,982 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:07:10,984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,984 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-09 17:07:10,985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-09 17:07:10,985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:07:10,985 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,987 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-09 17:07:10,990 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-09 17:07:11,017 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:07:11,018 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:07:11,053 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:07:11,323 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-09 17:07:11,336 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-09 17:07:11,352 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-09 17:07:11,361 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-09 17:07:11,365 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-09 17:07:11,382 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-09 17:07:11,428 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-09 17:07:11,434 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.837 seconds (JVM running for 5.408)
2020-01-09 17:07:11,676 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:07:11,706 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:07:11,719 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:07:11,721 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:07:11,722 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:07:11,725 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:07:11,726 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:07:11,729 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:07:11,731 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:07:11,736 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:07:11,737 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:07:11,740 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:07:11,744 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:07:11,744 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:07:11,745 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:07:11,750 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:07:11,750 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:07:11,751 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:07:11,755 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:07:11,756 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:07:11,758 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:07:11,758 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:07:11,759 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:07:11,761 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:07:11,763 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:07:11,764 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:07:11,766 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:07:11,769 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:07:11,770 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:07:11,771 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:07:11,773 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:07:11,774 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:07:11,775 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:07:11,778 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:07:11,779 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:07:11,779 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:07:11,783 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:07:11,784 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:07:11,784 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:07:15,702 [http-nio-8090-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-09 17:07:15,702 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-09 17:07:15,727 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2020-01-09 17:07:15,812 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:07:15,812 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:07:15,813 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:07:15,813 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:07:15,815 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:07:15,816 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:07:15,817 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:07:15,819 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:07:15,820 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:07:15,820 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:07:15,821 [http-nio-8090-exec-10] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:07:15,822 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:07:15,822 [http-nio-8090-exec-10] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:07:15,823 [http-nio-8090-exec-10] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:07:15,825 [http-nio-8090-exec-10] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:07:19,172 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-09 17:07:19,173 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-09 17:07:19,175 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-09 17:07:19,176 [http-nio-8090-exec-8] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-09 17:07:19,178 [http-nio-8090-exec-8] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-09 17:07:19,183 [http-nio-8090-exec-8] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-09 17:07:19,184 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-09 17:07:19,188 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-09 17:07:19,191 [http-nio-8090-exec-8] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-09 17:07:19,193 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-09 17:07:19,194 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-09 17:07:19,196 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-09 17:07:19,198 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-09 17:07:19,199 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-09 17:07:19,201 [http-nio-8090-exec-8] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-09 17:07:21,512 [http-nio-8090-exec-7] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:07:21,513 [http-nio-8090-exec-7] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:07:21,514 [http-nio-8090-exec-7] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:08:19,744 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 10092 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-09 17:08:19,753 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-09 17:08:19,753 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-09 17:08:19,872 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Thu Jan 09 17:08:19 CST 2020]; root of context hierarchy
2020-01-09 17:08:20,620 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-09 17:08:21,475 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-09 17:08:24,758 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-09 17:08:24,785 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-09 17:08:24,787 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-09 17:08:24,956 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-09 17:08:24,957 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 5085 ms
2020-01-09 17:08:25,174 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-09 17:08:25,202 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-09 17:08:25,204 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-09 17:08:25,204 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-09 17:08:25,205 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-09 17:08:26,971 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Thu Jan 09 17:08:19 CST 2020]; root of context hierarchy
2020-01-09 17:08:27,177 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-09 17:08:27,180 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,182 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,183 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-09 17:08:27,184 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-09 17:08:27,188 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,188 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,189 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,191 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,194 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-09 17:08:27,196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,196 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-09 17:08:27,203 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-09 17:08:27,203 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-09 17:08:27,203 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-09 17:08:27,211 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-09 17:08:27,212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-09 17:08:27,212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-09 17:08:27,212 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-09 17:08:27,214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-09 17:08:27,216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-09 17:08:27,217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,219 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:08:27,220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-09 17:08:27,220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:08:27,225 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:08:27,226 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:08:27,230 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-09 17:08:27,231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-09 17:08:27,231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-09 17:08:27,233 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:08:27,235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,238 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-09 17:08:27,239 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,240 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,241 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:08:27,242 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,243 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,243 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,244 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-09 17:08:27,251 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-09 17:08:27,252 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-09 17:08:27,386 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:08:27,387 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:08:27,512 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:08:28,259 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-09 17:08:28,274 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-09 17:08:28,306 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-09 17:08:28,340 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-09 17:08:28,470 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-09 17:08:28,637 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-09 17:08:28,721 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 9.683 seconds (JVM running for 10.704)
2020-01-09 17:08:36,611 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-09 17:08:36,991 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:08:37,014 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:08:37,029 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:08:37,031 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:08:37,032 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:08:37,033 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:08:37,033 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:08:37,034 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:08:37,036 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:08:37,040 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:08:37,040 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:08:37,042 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:08:37,044 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:08:37,045 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:08:37,047 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:08:37,053 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:08:37,053 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:08:37,055 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:08:37,057 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:08:37,058 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:08:37,060 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:08:37,061 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:08:37,061 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:08:37,063 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:08:37,065 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:08:37,066 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:08:37,067 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:08:37,070 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:08:37,071 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:08:37,072 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:08:37,074 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:08:37,076 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:08:37,077 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:08:37,080 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:08:37,080 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:08:37,081 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:08:37,084 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:08:37,084 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:08:37,085 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:08:41,643 [http-nio-8090-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-09 17:08:41,644 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-09 17:08:41,668 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
2020-01-09 17:08:41,758 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:08:41,759 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:08:41,760 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:11:28,289 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:11:28,290 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:11:28,293 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:11:28,295 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:11:28,297 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:11:28,300 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:11:28,302 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:11:28,303 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:11:28,305 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:11:28,309 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:11:28,310 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:11:28,314 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:11:28,319 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:11:28,320 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:11:28,321 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:11:28,323 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:11:28,324 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:11:28,324 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:11:28,326 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:11:28,327 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:11:28,328 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:11:28,328 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:11:28,329 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:11:28,330 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:11:28,330 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:11:28,330 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:11:28,333 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:11:28,335 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:11:28,336 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:11:28,336 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:11:28,338 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:11:28,338 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:11:28,339 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:11:28,341 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:11:28,341 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:11:28,342 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:11:28,344 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:11:28,345 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:11:28,346 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:12:17,074 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:12:17,075 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:12:17,076 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:12:17,077 [http-nio-8090-exec-3] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:12:17,077 [http-nio-8090-exec-3] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:12:17,078 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:12:17,079 [http-nio-8090-exec-3] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:12:17,079 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:12:17,080 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:12:17,081 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:17,081 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:12:17,082 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:17,083 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:17,084 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:12:17,085 [http-nio-8090-exec-4] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:26,163 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:12:26,163 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:12:26,165 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:12:26,166 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:12:26,168 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:12:26,170 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:12:26,170 [http-nio-8090-exec-1] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:12:26,174 [http-nio-8090-exec-1] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:12:26,172 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:26,180 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:12:26,182 [http-nio-8090-exec-1] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:12:26,183 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:26,185 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:26,186 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:12:26,189 [http-nio-8090-exec-2] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:39,840 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 17944 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-09 17:12:39,843 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-09 17:12:39,843 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-09 17:12:39,896 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:12:39 CST 2020]; root of context hierarchy
2020-01-09 17:12:40,286 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-09 17:12:40,773 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-09 17:12:41,957 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-09 17:12:41,981 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-09 17:12:41,982 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-09 17:12:42,157 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-09 17:12:42,158 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2262 ms
2020-01-09 17:12:42,403 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-09 17:12:42,418 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-09 17:12:42,419 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-09 17:12:42,419 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-09 17:12:42,420 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-09 17:12:43,755 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:12:39 CST 2020]; root of context hierarchy
2020-01-09 17:12:43,824 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-09 17:12:43,825 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,825 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,826 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-09 17:12:43,826 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-09 17:12:43,827 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,827 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,827 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,828 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,831 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,831 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,832 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-09 17:12:43,836 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-09 17:12:43,837 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-09 17:12:43,838 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-09 17:12:43,839 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-09 17:12:43,841 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-09 17:12:43,841 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-09 17:12:43,841 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-09 17:12:43,841 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-09 17:12:43,842 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,842 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,844 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,845 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-09 17:12:43,845 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-09 17:12:43,846 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-09 17:12:43,846 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,847 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:12:43,847 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:12:43,847 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,847 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:12:43,849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-09 17:12:43,849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-09 17:12:43,849 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:12:43,850 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-09 17:12:43,851 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:12:43,852 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:12:43,853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,853 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-09 17:12:43,854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,854 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,855 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-09 17:12:43,856 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-09 17:12:43,857 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-09 17:12:43,884 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:12:43,884 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:12:43,920 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:12:44,184 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-09 17:12:44,195 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-09 17:12:44,207 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-09 17:12:44,219 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-09 17:12:44,220 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-09 17:12:44,235 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-09 17:12:44,270 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-09 17:12:44,274 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.804 seconds (JVM running for 5.254)
2020-01-09 17:12:44,539 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:12:44,561 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:12:44,571 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:12:44,573 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:44,573 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:12:44,574 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:44,575 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:44,575 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:12:44,576 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:44,581 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:12:44,581 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:12:44,582 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:12:44,585 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:12:44,585 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:12:44,587 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:12:44,591 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:12:44,591 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:12:44,592 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:12:44,596 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:12:44,596 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:12:44,599 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:12:44,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:44,600 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:12:44,601 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:44,602 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:12:44,603 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:12:44,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:12:44,606 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:12:44,607 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:12:44,607 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:12:44,609 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:12:44,609 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:12:44,610 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:12:44,612 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:12:44,612 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:12:44,613 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:12:44,616 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:12:44,616 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:12:44,616 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:12:54,474 [http-nio-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-09 17:12:54,474 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-09 17:12:54,494 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-01-09 17:13:04,773 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 5748 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-09 17:13:04,782 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-09 17:13:04,784 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-09 17:13:04,869 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Thu Jan 09 17:13:04 CST 2020]; root of context hierarchy
2020-01-09 17:13:05,537 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-09 17:13:06,426 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-09 17:13:08,544 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-09 17:13:08,579 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-09 17:13:08,584 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-09 17:13:08,822 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-09 17:13:08,823 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3954 ms
2020-01-09 17:13:09,078 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-09 17:13:09,088 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-09 17:13:09,089 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-09 17:13:09,089 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-09 17:13:09,090 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-09 17:13:11,804 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6057aebb: startup date [Thu Jan 09 17:13:04 CST 2020]; root of context hierarchy
2020-01-09 17:13:11,961 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,963 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,964 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-09 17:13:11,965 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-09 17:13:11,970 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-09 17:13:11,972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,972 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,973 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-09 17:13:11,974 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-09 17:13:11,978 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-09 17:13:11,979 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-09 17:13:11,981 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-09 17:13:11,988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-09 17:13:11,988 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-09 17:13:11,989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-09 17:13:11,989 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-09 17:13:11,990 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,991 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,992 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,992 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-09 17:13:11,994 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-09 17:13:11,995 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,996 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:13:11,996 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,997 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:13:11,997 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:11,997 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-09 17:13:12,002 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,006 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-09 17:13:12,007 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:13:12,007 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:13:12,008 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-09 17:13:12,008 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-09 17:13:12,010 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:13:12,015 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:13:12,019 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,019 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,020 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,021 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,021 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-09 17:13:12,022 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,022 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-09 17:13:12,022 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,025 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-09 17:13:12,026 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-09 17:13:12,087 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:13:12,087 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:13:12,149 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:13:12,735 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-09 17:13:12,751 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-09 17:13:12,792 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-09 17:13:12,802 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-09 17:13:12,821 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-09 17:13:12,854 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-09 17:13:13,041 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-09 17:13:13,053 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 9.183 seconds (JVM running for 10.094)
2020-01-09 17:13:13,440 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:13:13,463 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:13:13,477 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:13:13,479 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:13:13,480 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:13:13,481 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:13:13,482 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:13:13,483 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:13:13,484 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:13:13,490 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:13:13,491 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:13:13,492 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:13:13,501 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:13:13,502 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:13:13,504 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:13:13,508 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:13:13,509 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:13:13,510 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:13:13,514 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:13:13,514 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:13:13,517 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:13:13,518 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:13:13,518 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:13:13,520 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:13:13,522 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:13:13,523 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:13:13,524 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:13:13,527 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:13:13,528 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:13:13,529 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:13:13,531 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:13:13,532 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:13:13,534 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:13:13,536 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:13:13,537 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:13:13,538 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:13:13,540 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:13:13,541 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:13:13,542 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:13:39,819 [http-nio-8090-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-09 17:13:39,819 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-09 17:13:39,846 [http-nio-8090-exec-10] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2020-01-09 17:14:50,402 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:14:50,402 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:14:50,402 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:14:50,403 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:14:50,404 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:14:50,404 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:14:50,405 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:14:50,406 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:14:50,406 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:14:50,407 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:14:50,409 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:14:50,409 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:14:50,410 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:14:50,410 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:14:50,413 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:14:54,799 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-09 17:14:54,801 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-09 17:14:54,804 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-09 17:14:54,805 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-09 17:14:54,807 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-09 17:14:54,813 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-09 17:14:54,814 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-09 17:14:54,815 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-09 17:14:54,818 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-09 17:14:54,820 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-09 17:14:54,821 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-09 17:14:54,823 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-09 17:14:54,824 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-09 17:14:54,825 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-09 17:14:54,827 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-09 17:14:55,916 [http-nio-8090-exec-6] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:14:55,918 [http-nio-8090-exec-6] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:14:55,919 [http-nio-8090-exec-6] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:15:32,256 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:15:32,256 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:15:32,258 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:15:32,258 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:15:32,259 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:15:32,260 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:15:32,261 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:15:32,261 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:15:32,263 [http-nio-8090-exec-5] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:15:32,270 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:15:32,270 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:15:32,271 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:15:32,272 [http-nio-8090-exec-4] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:15:32,272 [http-nio-8090-exec-4] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:15:32,273 [http-nio-8090-exec-4] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:15:36,326 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-09 17:15:36,327 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-09 17:15:36,329 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-09 17:15:36,330 [http-nio-8090-exec-3] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-09 17:15:36,331 [http-nio-8090-exec-3] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-09 17:15:36,333 [http-nio-8090-exec-3] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-09 17:15:36,334 [http-nio-8090-exec-3] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-09 17:15:36,335 [http-nio-8090-exec-3] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-09 17:15:36,336 [http-nio-8090-exec-3] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-09 17:15:36,337 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-09 17:15:36,338 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-09 17:15:36,340 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-09 17:15:36,341 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-09 17:15:36,342 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-09 17:15:36,343 [http-nio-8090-exec-3] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-09 17:15:37,284 [http-nio-8090-exec-2] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:15:37,285 [http-nio-8090-exec-2] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:15:37,286 [http-nio-8090-exec-2] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:16:06,279 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:16:06,279 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:16:06,279 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:16:06,279 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:16:06,280 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:16:06,282 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:16:06,283 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:16:06,281 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:16:06,284 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:16:06,284 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:16:06,285 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:16:06,285 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:16:06,286 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:16:06,286 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:16:06,288 [http-nio-8090-exec-9] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:16:12,761 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:16:12,762 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:16:12,763 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:16:12,764 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:16:12,766 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:16:12,767 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:16:12,768 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:16:12,769 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:16:12,770 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:16:12,773 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:16:12,773 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:16:12,774 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:16:12,777 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:16:12,777 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:16:12,779 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:16:12,782 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:16:12,782 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:16:12,784 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:16:12,787 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:16:12,787 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:16:12,790 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:16:12,791 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:16:12,791 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:16:12,792 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:16:12,793 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:16:12,793 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:16:12,794 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:16:12,796 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:16:12,796 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:16:12,798 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:16:12,800 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:16:12,801 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:16:12,802 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:16:12,803 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:16:12,803 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:16:12,804 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:16:12,805 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:16:12,806 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:16:12,806 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:16:21,066 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-09 17:16:21,066 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-09 17:16:21,067 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-09 17:16:21,068 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-09 17:16:21,069 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-09 17:16:21,069 [http-nio-8090-exec-7] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-09 17:16:21,070 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-09 17:16:21,071 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-09 17:16:21,073 [http-nio-8090-exec-7] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-09 17:16:21,074 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-09 17:16:21,074 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-09 17:16:21,075 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-09 17:16:21,076 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-09 17:16:21,078 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-09 17:16:21,080 [http-nio-8090-exec-7] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-09 17:16:21,915 [http-nio-8090-exec-6] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:16:21,916 [http-nio-8090-exec-6] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:16:21,918 [http-nio-8090-exec-6] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:17:06,964 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==>  Preparing: insert into accountcard(user_id,type,accountName,accountNum,pic) values(?,?,?,?,?) 
2020-01-09 17:17:06,966 [http-nio-8090-exec-5] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==> Parameters: 5(Integer), 支付宝(String), null, 噢噢(String), E:/Ericcccccccccccccccccccccc/pics/7fde0284-31de-4b07-888b-18aa2e8f99ff.jpeg(String)
2020-01-09 17:17:06,987 [http-nio-8090-exec-5] INFO  o.s.b.f.xml.XmlBeanDefinitionReader 317 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-01-09 17:17:07,071 [http-nio-8090-exec-5] INFO  o.s.j.support.SQLErrorCodesFactory 127 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2020-01-09 17:17:07,096 [http-nio-8090-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
### The error may involve com.jizhi.dao.AccountCardDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into accountcard(user_id,type,accountName,accountNum,pic)    values(?,?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
; SQL []; Column 'accountName' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy65.save(Unknown Source)
	at com.jizhi.service.impl.AccountCardServiceImpl.save(AccountCardServiceImpl.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.save(Unknown Source)
	at com.jizhi.controller.AccountCardController.saveIdCard(AccountCardController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-09 17:17:27,450 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==>  Preparing: insert into accountcard(user_id,type,accountName,accountNum,pic) values(?,?,?,?,?) 
2020-01-09 17:17:27,451 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==> Parameters: 5(Integer), 支付宝(String), null, 噢噢(String), E:/Ericcccccccccccccccccccccc/pics/7bf7bbcd-e523-4535-9e20-c2500f4f68b5.jpeg(String)
2020-01-09 17:17:27,454 [http-nio-8090-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
### The error may involve com.jizhi.dao.AccountCardDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into accountcard(user_id,type,accountName,accountNum,pic)    values(?,?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
; SQL []; Column 'accountName' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy65.save(Unknown Source)
	at com.jizhi.service.impl.AccountCardServiceImpl.save(AccountCardServiceImpl.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.save(Unknown Source)
	at com.jizhi.controller.AccountCardController.saveIdCard(AccountCardController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-09 17:17:43,722 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 8932 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-09 17:17:43,724 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-09 17:17:43,725 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-09 17:17:43,777 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:17:43 CST 2020]; root of context hierarchy
2020-01-09 17:17:44,309 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-09 17:17:45,108 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-09 17:17:46,396 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-09 17:17:46,414 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-09 17:17:46,416 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-09 17:17:46,536 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-09 17:17:46,536 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2759 ms
2020-01-09 17:17:46,714 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-09 17:17:46,719 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-09 17:17:46,719 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-09 17:17:46,719 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-09 17:17:46,720 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-09 17:17:48,451 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Thu Jan 09 17:17:43 CST 2020]; root of context hierarchy
2020-01-09 17:17:48,535 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-09 17:17:48,537 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-09 17:17:48,538 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-09 17:17:48,540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,540 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,541 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-09 17:17:48,543 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,551 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-09 17:17:48,551 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-09 17:17:48,551 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-09 17:17:48,555 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-09 17:17:48,558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-09 17:17:48,558 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-09 17:17:48,559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-09 17:17:48,559 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-09 17:17:48,560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,560 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-09 17:17:48,561 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-09 17:17:48,562 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,563 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-09 17:17:48,565 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:17:48,566 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-09 17:17:48,567 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:17:48,568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-09 17:17:48,568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-09 17:17:48,568 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-09 17:17:48,569 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-09 17:17:48,570 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:17:48,571 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-09 17:17:48,572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,572 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-09 17:17:48,573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,573 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-09 17:17:48,575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-09 17:17:48,575 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-09 17:17:48,609 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:17:48,610 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:17:48,652 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-09 17:17:48,946 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-09 17:17:48,957 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-09 17:17:48,970 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-09 17:17:48,981 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-09 17:17:48,982 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-09 17:17:48,996 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-09 17:17:49,025 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-09 17:17:49,030 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 5.763 seconds (JVM running for 6.244)
2020-01-09 17:17:49,264 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:17:49,285 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:17:49,295 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:17:49,296 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:17:49,297 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:17:49,299 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:17:49,299 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:17:49,299 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:17:49,300 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:17:49,304 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-09 17:17:49,304 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-09 17:17:49,305 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-09 17:17:49,307 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-09 17:17:49,307 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-09(String), 17:00(String)
2020-01-09 17:17:49,309 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-09 17:17:49,312 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-09 17:17:49,313 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-08(String), 17:00(String)
2020-01-09 17:17:49,314 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-09 17:17:49,317 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:17:49,317 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:17:49,319 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:17:49,319 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:17:49,320 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:17:49,321 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:17:49,323 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:17:49,323 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:17:49,324 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:17:49,326 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:17:49,327 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-09 17:17:49,328 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:17:49,330 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-09 17:17:49,331 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-09(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-09 17:17:49,331 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-09 17:17:49,333 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-09 17:17:49,334 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-09 17:17:49,335 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-09 17:17:49,337 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-09 17:17:49,337 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-09 17:17:49,338 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-09 17:17:52,212 [http-nio-8090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-09 17:17:52,212 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-09 17:17:52,239 [http-nio-8090-exec-1] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2020-01-09 17:17:52,622 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==>  Preparing: insert into accountcard(user_id,type,accountName,accountNum,pic) values(?,?,?,?,?) 
2020-01-09 17:17:52,625 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==> Parameters: 5(Integer), 微信(String), null, 我问一下(String), E:/Ericcccccccccccccccccccccc/pics/1bc1d717-5d53-4dd5-adef-561f8bba06eb.jpeg(String)
2020-01-09 17:17:52,637 [http-nio-8090-exec-1] INFO  o.s.b.f.xml.XmlBeanDefinitionReader 317 - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2020-01-09 17:17:52,791 [http-nio-8090-exec-1] INFO  o.s.j.support.SQLErrorCodesFactory 127 - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2020-01-09 17:17:52,855 [http-nio-8090-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
### The error may involve com.jizhi.dao.AccountCardDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into accountcard(user_id,type,accountName,accountNum,pic)    values(?,?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
; SQL []; Column 'accountName' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy65.save(Unknown Source)
	at com.jizhi.service.impl.AccountCardServiceImpl.save(AccountCardServiceImpl.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.save(Unknown Source)
	at com.jizhi.controller.AccountCardController.saveIdCard(AccountCardController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-09 17:18:17,947 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:18:17,950 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:18:17,951 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:18:17,953 [http-nio-8090-exec-2] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:18:17,954 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:18:17,960 [http-nio-8090-exec-3] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:18:17,961 [http-nio-8090-exec-2] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:18:17,961 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:18:17,963 [http-nio-8090-exec-2] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:18:17,963 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:18:17,967 [http-nio-8090-exec-2] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:18:17,969 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:18:17,972 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:18:17,973 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:18:17,976 [http-nio-8090-exec-3] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:18:29,434 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-09 17:18:29,435 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-09 17:18:29,437 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-09 17:18:29,438 [http-nio-8090-exec-4] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-09 17:18:29,439 [http-nio-8090-exec-4] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-09 17:18:29,443 [http-nio-8090-exec-4] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-09 17:18:29,445 [http-nio-8090-exec-4] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-09 17:18:29,446 [http-nio-8090-exec-4] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-09 17:18:29,448 [http-nio-8090-exec-4] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-09 17:18:29,450 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-09 17:18:29,451 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-09 17:18:29,453 [http-nio-8090-exec-4] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-09 17:18:29,454 [http-nio-8090-exec-4] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-09 17:18:29,455 [http-nio-8090-exec-4] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-09 17:18:29,457 [http-nio-8090-exec-4] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-09 17:18:30,111 [http-nio-8090-exec-5] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:18:30,112 [http-nio-8090-exec-5] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:18:30,114 [http-nio-8090-exec-5] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:18:48,706 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==>  Preparing: insert into accountcard(user_id,type,accountName,accountNum,pic) values(?,?,?,?,?) 
2020-01-09 17:18:48,707 [http-nio-8090-exec-6] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==> Parameters: 5(Integer), 微信(String), null, 功能(String), E:/Ericcccccccccccccccccccccc/pics/6f9aca0c-4fda-4645-bf05-628cee785713.jpeg(String)
2020-01-09 17:18:48,710 [http-nio-8090-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
### The error may involve com.jizhi.dao.AccountCardDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into accountcard(user_id,type,accountName,accountNum,pic)    values(?,?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
; SQL []; Column 'accountName' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy65.save(Unknown Source)
	at com.jizhi.service.impl.AccountCardServiceImpl.save(AccountCardServiceImpl.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.save(Unknown Source)
	at com.jizhi.controller.AccountCardController.saveIdCard(AccountCardController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-01-09 17:19:13,472 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-09 17:19:13,473 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-09 17:19:13,475 [http-nio-8090-exec-7] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-09 17:19:13,476 [http-nio-8090-exec-7] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:19:13,476 [http-nio-8090-exec-7] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-09 17:19:13,477 [http-nio-8090-exec-7] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:19:13,478 [http-nio-8090-exec-7] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-09 17:19:13,479 [http-nio-8090-exec-7] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-09 17:19:13,481 [http-nio-8090-exec-7] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-09 17:19:13,502 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==>  Preparing: select * from first_page 
2020-01-09 17:19:13,502 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - ==> Parameters: 
2020-01-09 17:19:13,503 [http-nio-8090-exec-8] DEBUG com.jizhi.dao.FirstPageDao.query 159 - <==      Total: 1
2020-01-09 17:19:13,504 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==>  Preparing: select * from message where id=(select max(id) from message) 
2020-01-09 17:19:13,505 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - ==> Parameters: 
2020-01-09 17:19:13,506 [http-nio-8090-exec-8] DEBUG c.j.dao.MessageDao.queryLatestMsg 159 - <==      Total: 1
2020-01-09 17:19:16,870 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid from user where id=? 
2020-01-09 17:19:16,871 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 5(Integer)
2020-01-09 17:19:16,872 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-09 17:19:16,882 [http-nio-8090-exec-9] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==>  Preparing: select sum(price) from property where userId=? and (isSold=0 or isSold=1) 
2020-01-09 17:19:16,884 [http-nio-8090-exec-9] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - ==> Parameters: 5(Integer)
2020-01-09 17:19:16,889 [http-nio-8090-exec-9] DEBUG c.j.dao.PropertyDao.queryTotalMonet 159 - <==      Total: 1
2020-01-09 17:19:16,890 [http-nio-8090-exec-9] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==>  Preparing: select sum(animalProfit) from profits where userId=? 
2020-01-09 17:19:16,892 [http-nio-8090-exec-9] DEBUG c.j.d.P.queryAllAnimalProfits 159 - ==> Parameters: 5(Integer)
2020-01-09 17:19:16,893 [http-nio-8090-exec-9] DEBUG c.j.d.P.queryAllAnimalProfits 159 - <==      Total: 1
2020-01-09 17:19:16,894 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==>  Preparing: select sum(NFC) from profits where userId=? 
2020-01-09 17:19:16,894 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - ==> Parameters: 5(Integer)
2020-01-09 17:19:16,895 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.ProfitsDao.queryAllNFC 159 - <==      Total: 1
2020-01-09 17:19:16,896 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==>  Preparing: select sum(shareProfit) from profits where sharerId=? 
2020-01-09 17:19:16,897 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - ==> Parameters: 5(Integer)
2020-01-09 17:19:16,898 [http-nio-8090-exec-9] DEBUG c.j.dao.ProfitsDao.queryShareProfit 159 - <==      Total: 1
2020-01-09 17:19:17,705 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==>  Preparing: select id,user_id,type,accountName,accountNum,pic from accountCard where user_id=? 
2020-01-09 17:19:17,706 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - ==> Parameters: 5(Integer)
2020-01-09 17:19:17,708 [http-nio-8090-exec-10] DEBUG c.jizhi.dao.AccountCardDao.queryAll 159 - <==      Total: 0
2020-01-09 17:19:30,467 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==>  Preparing: insert into accountcard(user_id,type,accountName,accountNum,pic) values(?,?,?,?,?) 
2020-01-09 17:19:30,468 [http-nio-8090-exec-1] DEBUG com.jizhi.dao.AccountCardDao.save 159 - ==> Parameters: 5(Integer), 微信(String), null, 呃呃呃(String), E:/Ericcccccccccccccccccccccc/pics/19413666-34c9-4252-8736-1bccc5d05065.jpeg(String)
2020-01-09 17:19:30,471 [http-nio-8090-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] 181 - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
### The error may involve com.jizhi.dao.AccountCardDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into accountcard(user_id,type,accountName,accountNum,pic)    values(?,?,?,?,?)
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
; SQL []; Column 'accountName' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'accountName' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:935)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2501)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy107.execute(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor67.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy64.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy65.save(Unknown Source)
	at com.jizhi.service.impl.AccountCardServiceImpl.save(AccountCardServiceImpl.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)
	at com.sun.proxy.$Proxy69.save(Unknown Source)
	at com.jizhi.controller.AccountCardController.saveIdCard(AccountCardController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1455)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
