2020-01-18 14:10:28,522 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 14268 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-18 14:10:28,534 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-18 14:10:28,534 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-18 14:10:28,612 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 14:10:28 CST 2020]; root of context hierarchy
2020-01-18 14:10:29,155 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-18 14:10:29,991 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-18 14:10:31,983 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-18 14:10:32,006 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-18 14:10:32,008 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-18 14:10:32,225 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-18 14:10:32,226 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 3615 ms
2020-01-18 14:10:32,478 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-18 14:10:32,484 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-18 14:10:32,485 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-18 14:10:32,485 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-18 14:10:32,485 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-18 14:10:33,847 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 14:10:28 CST 2020]; root of context hierarchy
2020-01-18 14:10:34,009 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,011 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,013 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-18 14:10:34,014 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-18 14:10:34,014 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-18 14:10:34,016 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,016 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-18 14:10:34,016 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,017 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,020 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,020 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,023 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-18 14:10:34,024 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,024 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,024 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,030 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-18 14:10:34,031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-18 14:10:34,031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-18 14:10:34,031 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-18 14:10:34,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-18 14:10:34,033 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-18 14:10:34,034 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-18 14:10:34,035 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-18 14:10:34,036 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,038 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,040 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,041 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-18 14:10:34,046 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 14:10:34,047 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,049 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-18 14:10:34,049 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,051 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 14:10:34,054 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,054 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,054 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-18 14:10:34,054 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-18 14:10:34,055 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,055 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-18 14:10:34,056 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,056 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-18 14:10:34,057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-18 14:10:34,057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 14:10:34,057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 14:10:34,057 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-18 14:10:34,060 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 14:10:34,061 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,063 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-18 14:10:34,064 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,064 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,067 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/test]}" onto public java.lang.String com.jizhi.controller.UserController.voidtest(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,067 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,067 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-18 14:10:34,068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 14:10:34,068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,068 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,070 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-18 14:10:34,071 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-18 14:10:34,120 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:10:34,120 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:10:34,120 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:10:34,180 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:10:34,524 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-18 14:10:34,544 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-18 14:10:34,564 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-18 14:10:34,591 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-18 14:10:34,591 [pool-2-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-18 14:10:34,626 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-18 14:10:34,685 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-18 14:10:34,697 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 6.576 seconds (JVM running for 7.034)
2020-01-18 14:10:34,989 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:10:35,010 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:10:35,031 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:10:35,033 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:10:35,034 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:10:35,039 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:10:35,039 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:10:35,040 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:10:35,041 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:10:35,044 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:10:35,045 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:10:35,046 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:10:35,049 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:10:35,050 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:10:35,053 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:10:35,055 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:10:35,056 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:10:35,059 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:10:35,061 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:10:35,061 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:10:35,063 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:10:35,063 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:10:35,064 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:10:35,065 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:10:35,067 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:10:35,067 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:10:35,068 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:10:35,070 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:10:35,070 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:10:35,071 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:10:35,073 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:10:35,074 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:10:35,075 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:10:35,076 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:10:35,077 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:10:35,081 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:10:35,083 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:10:35,083 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:10:35,084 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:12:15,432 [http-nio-8090-exec-9] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring FrameworkServlet 'dispatcherServlet'
2020-01-18 14:12:15,432 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 489 - FrameworkServlet 'dispatcherServlet': initialization started
2020-01-18 14:12:15,452 [http-nio-8090-exec-9] INFO  o.s.web.servlet.DispatcherServlet 508 - FrameworkServlet 'dispatcherServlet': initialization completed in 20 ms
2020-01-18 14:12:15,556 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==>  Preparing: select * from user where tel=? 
2020-01-18 14:12:15,556 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - ==> Parameters: 18200295737(String)
2020-01-18 14:12:15,560 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.queryByTel 159 - <==      Total: 1
2020-01-18 14:12:15,623 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==>  Preparing: update user set cid=? where tel=? 
2020-01-18 14:12:15,624 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - ==> Parameters: null, 18200295737(String)
2020-01-18 14:12:15,626 [http-nio-8090-exec-9] DEBUG com.jizhi.dao.UserDao.updateCid 159 - <==    Updates: 1
2020-01-18 14:13:34,561 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:13:34,562 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:13:34,565 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:13:34,565 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:13:34,566 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:13:34,568 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:13:34,569 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:13:34,569 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:13:34,570 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:13:34,572 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:13:34,573 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:13:34,574 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:13:34,576 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:13:34,577 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:13:34,578 [pool-2-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:13:34,580 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:13:34,580 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:13:34,582 [pool-2-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:13:34,584 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:13:34,584 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:13:34,586 [pool-2-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:13:34,586 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:13:34,586 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:13:34,587 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:13:34,588 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:13:34,588 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:13:34,590 [pool-2-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:13:34,592 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:13:34,593 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:13:34,593 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:13:34,595 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:13:34,596 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:13:34,597 [pool-2-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:13:34,598 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:13:34,598 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:13:34,600 [pool-2-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:13:34,601 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:13:34,601 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:13:34,602 [pool-2-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:15:53,227 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 6776 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-18 14:15:53,229 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-18 14:15:53,229 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-18 14:15:53,278 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 14:15:53 CST 2020]; root of context hierarchy
2020-01-18 14:15:53,668 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-18 14:15:54,233 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-18 14:15:55,892 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-18 14:15:55,913 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-18 14:15:55,915 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-18 14:15:56,044 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-18 14:15:56,044 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2766 ms
2020-01-18 14:15:56,214 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-18 14:15:56,221 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-18 14:15:56,222 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-18 14:15:56,222 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-18 14:15:56,222 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-18 14:15:57,362 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 14:15:53 CST 2020]; root of context hierarchy
2020-01-18 14:15:57,429 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,430 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-18 14:15:57,430 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,431 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-18 14:15:57,431 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-18 14:15:57,432 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,433 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-18 14:15:57,433 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,434 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,435 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,435 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,436 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,437 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-18 14:15:57,442 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-18 14:15:57,443 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-18 14:15:57,443 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-18 14:15:57,443 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-18 14:15:57,444 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-18 14:15:57,445 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-18 14:15:57,445 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-18 14:15:57,445 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-18 14:15:57,446 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,446 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,447 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,447 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-18 14:15:57,448 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,449 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-18 14:15:57,449 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 14:15:57,449 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 14:15:57,449 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,451 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-18 14:15:57,451 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,452 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,452 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,452 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-18 14:15:57,452 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-18 14:15:57,453 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,453 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-18 14:15:57,454 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 14:15:57,454 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 14:15:57,454 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-18 14:15:57,454 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-18 14:15:57,456 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 14:15:57,457 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,458 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,459 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-18 14:15:57,460 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-18 14:15:57,461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 14:15:57,461 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,463 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,464 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/test]}" onto public java.lang.String com.jizhi.controller.UserController.voidtest(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-18 14:15:57,466 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-18 14:15:57,496 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:15:57,496 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:15:57,496 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:15:57,532 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:15:57,826 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-18 14:15:57,838 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-18 14:15:57,853 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-18 14:15:57,861 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-18 14:15:57,866 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-18 14:15:57,881 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-18 14:15:57,906 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-18 14:15:57,914 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 5.056 seconds (JVM running for 5.516)
2020-01-18 14:15:58,178 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:15:58,201 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:15:58,216 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:15:58,218 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:15:58,218 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:15:58,221 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:15:58,222 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:15:58,222 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:15:58,224 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:15:58,228 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:15:58,228 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:15:58,229 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,236 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:15:58,236 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 1(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:15:58,238 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 2
2020-01-18 14:15:58,241 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:15:58,242 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 1(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:15:58,244 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 1
2020-01-18 14:15:58,246 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:15:58,246 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:15:58,247 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,250 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:15:58,251 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:15:58,253 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,255 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.add 159 - ==>  Preparing: insert into match_tb(orderId,propertyId,price,buyerConfirm,sellerConfirm) values (?,?,?,?,?) 
2020-01-18 14:15:58,256 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.add 159 - ==> Parameters: 52(Integer), 49(Integer), 180.0(Double), 0(Integer), 0(Integer)
2020-01-18 14:15:58,258 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.add 159 - <==    Updates: 1
2020-01-18 14:15:58,260 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateState 159 - ==>  Preparing: update orders set state=2 where id=? 
2020-01-18 14:15:58,260 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateState 159 - ==> Parameters: 52(Integer)
2020-01-18 14:15:58,261 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateState 159 - <==    Updates: 1
2020-01-18 14:15:58,262 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.updateState 159 - ==>  Preparing: update property set isSold=? where id=? 
2020-01-18 14:15:58,263 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.updateState 159 - ==> Parameters: 1(Integer), 49(Integer)
2020-01-18 14:15:58,264 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.updateState 159 - <==    Updates: 1
2020-01-18 14:15:58,265 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-18 14:15:58,266 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 3(Integer)
2020-01-18 14:15:58,267 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,268 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==>  Preparing: select id, userName, tel, state, isFrozen, password, inviteCode, invitedCode, isConfirmed, secondpsw,role,cid,level from user where id=? 
2020-01-18 14:15:58,268 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:15:58,269 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,270 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:15:58,271 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 0.6(Double), 6(Integer), 2020-01-18 14:15:58.27(Timestamp)
2020-01-18 14:15:58,273 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:15:58,946 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:15:58,946 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:15:58,947 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,949 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:15:58,949 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:15:58,950 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:15:58,952 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:15:58,953 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:15:58,954 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:15:58,957 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:15:58,957 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:15:58,958 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:15:58,959 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:15:58,959 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:15:58,960 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:15:58,961 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:15:58,961 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:15:58,963 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:15:58,966 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:15:58,966 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:15:58,967 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:15:58,969 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:15:58,970 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:15:58,970 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:15:58,981 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:15:58,981 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:15:58,982 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 1
2020-01-18 14:15:58,983 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==>  Preparing: select * from orders where id=? 
2020-01-18 14:15:58,984 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==> Parameters: 52(Integer)
2020-01-18 14:15:58,985 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,987 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==>  Preparing: select id,userId,animalId,buyDate,buyTime,price,role,code from property where id=? 
2020-01-18 14:15:58,988 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==> Parameters: 49(Integer)
2020-01-18 14:15:58,989 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - <==      Total: 1
2020-01-18 14:15:58,990 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==>  Preparing: select endTime from order_time where animalId=? and startTime=? 
2020-01-18 14:15:58,991 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==> Parameters: 1(Integer), 14:00(String)
2020-01-18 14:15:58,993 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - <==      Total: 1
2020-01-18 14:15:58,995 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:15:58,995 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:15:58,995 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:17:24,324 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 3756 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-18 14:17:24,326 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-18 14:17:24,326 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-18 14:17:24,378 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 14:17:24 CST 2020]; root of context hierarchy
2020-01-18 14:17:24,800 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-18 14:17:25,355 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-18 14:17:26,438 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-18 14:17:26,461 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-18 14:17:26,464 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-18 14:17:26,572 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-18 14:17:26,573 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2195 ms
2020-01-18 14:17:26,721 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-18 14:17:26,727 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-18 14:17:26,728 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-18 14:17:26,728 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-18 14:17:26,728 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-18 14:17:28,136 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 14:17:24 CST 2020]; root of context hierarchy
2020-01-18 14:17:28,197 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,198 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-18 14:17:28,199 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,199 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-18 14:17:28,200 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-18 14:17:28,202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,202 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-18 14:17:28,203 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,204 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,206 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-18 14:17:28,207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,207 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,213 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-18 14:17:28,213 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-18 14:17:28,214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-18 14:17:28,214 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-18 14:17:28,215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-18 14:17:28,215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-18 14:17:28,215 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-18 14:17:28,216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-18 14:17:28,216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,216 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,217 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-18 14:17:28,218 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,219 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 14:17:28,219 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-18 14:17:28,219 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 14:17:28,219 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,220 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,221 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-18 14:17:28,221 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,221 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-18 14:17:28,221 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-18 14:17:28,221 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,222 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-18 14:17:28,223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 14:17:28,223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-18 14:17:28,223 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 14:17:28,224 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-18 14:17:28,229 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 14:17:28,230 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,230 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-18 14:17:28,231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-18 14:17:28,231 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 14:17:28,232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,232 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/test]}" onto public java.lang.String com.jizhi.controller.UserController.voidtest(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,233 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-18 14:17:28,235 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-18 14:17:28,263 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:17:28,264 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:17:28,264 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:17:28,297 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 14:17:28,554 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-18 14:17:28,569 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-18 14:17:28,585 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-18 14:17:28,602 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-18 14:17:28,604 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-18 14:17:28,620 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-18 14:17:28,652 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-18 14:17:28,660 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.73 seconds (JVM running for 5.222)
2020-01-18 14:17:28,931 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:17:28,955 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:17:28,967 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:17:28,969 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:17:28,970 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:17:28,974 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:17:28,975 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:17:28,975 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:17:28,983 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:17:28,986 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:17:28,987 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:17:28,988 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:17:28,992 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:17:28,992 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:17:28,995 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:17:28,998 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:17:28,999 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:17:29,002 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:17:29,006 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:17:29,007 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:17:29,009 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:17:29,009 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:17:29,010 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:17:29,012 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:17:29,014 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:17:29,015 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:17:29,016 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:17:29,018 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:17:29,019 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:17:29,021 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:17:29,025 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:17:29,025 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:17:29,026 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:17:29,032 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:17:29,034 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:17:29.032(Timestamp)
2020-01-18 14:17:29,037 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:17:29,038 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:17:29,039 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:17:29.037(Timestamp)
2020-01-18 14:17:29,041 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:17:29,042 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:17:29,043 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:17:29,044 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 1
2020-01-18 14:17:29,050 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:17:29,051 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:17:29,051 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:17:29,053 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:17:29,056 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:17:29,057 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:17:29,061 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:17:29,061 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:17:29,064 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 1
2020-01-18 14:17:29,069 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==>  Preparing: select * from orders where id=? 
2020-01-18 14:17:29,070 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - ==> Parameters: 52(Integer)
2020-01-18 14:17:29,071 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryById 159 - <==      Total: 1
2020-01-18 14:17:29,074 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==>  Preparing: select id,userId,animalId,buyDate,buyTime,price,role,code from property where id=? 
2020-01-18 14:17:29,074 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - ==> Parameters: 49(Integer)
2020-01-18 14:17:29,076 [pool-1-thread-1] DEBUG com.jizhi.dao.PropertyDao.queryById 159 - <==      Total: 1
2020-01-18 14:17:29,089 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==>  Preparing: select endTime from order_time where animalId=? and startTime=? 
2020-01-18 14:17:29,089 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - ==> Parameters: 1(Integer), 14:00(String)
2020-01-18 14:17:29,092 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryLastTime 159 - <==      Total: 1
2020-01-18 14:17:29,093 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.updateIsFrozen 159 - ==>  Preparing: update user set isFrozen=? where id=? 
2020-01-18 14:17:29,094 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.updateIsFrozen 159 - ==> Parameters: 1(Integer), 3(Integer)
2020-01-18 14:17:29,099 [pool-1-thread-1] DEBUG com.jizhi.dao.UserDao.updateIsFrozen 159 - <==    Updates: 1
2020-01-18 14:17:29,103 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.deleteById 159 - ==>  Preparing: delete from match_tb where id=? 
2020-01-18 14:17:29,103 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.deleteById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:17:29,104 [pool-1-thread-1] DEBUG com.jizhi.dao.MatchDao.deleteById 159 - <==    Updates: 1
2020-01-18 14:17:29,107 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:17:29,108 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:17:29,109 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:17:29,111 [pool-1-thread-1] DEBUG c.j.d.PropertyDao.updateBuyDateTime 159 - ==>  Preparing: update property set buyDate=?,buyTime=?,isSold=0 where id=? 
2020-01-18 14:17:29,112 [pool-1-thread-1] DEBUG c.j.d.PropertyDao.updateBuyDateTime 159 - ==> Parameters: 2020-01-18(String), 09:00(String), 49(Integer)
2020-01-18 14:17:29,114 [pool-1-thread-1] DEBUG c.j.d.PropertyDao.updateBuyDateTime 159 - <==    Updates: 1
2020-01-18 14:17:29,123 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:17:29,124 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:17:29,125 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:20:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:20:28,596 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:20:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:20:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:20:28,606 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:20:28,611 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:20:28,612 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:20:28,613 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:20:28,615 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:20:28,620 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:20:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:20:28,624 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:20:28,626 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:20:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:20:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:20:28,632 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:20:28,633 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:20:28,635 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:20:28,637 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:20:28,637 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:20:28,640 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:20:28,640 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:20:28,641 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:20:28,642 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:20:28,643 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:20:28,643 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:20:28,645 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:20:28,647 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:20:28,648 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:20:28,649 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:20:28,651 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:20:28,651 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:20:28,653 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:20:28,654 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:20:28,655 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:20:28.654(Timestamp)
2020-01-18 14:20:28,659 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:20:28,659 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:20:28,660 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:20:28.659(Timestamp)
2020-01-18 14:20:28,662 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:20:28,663 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:20:28,663 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:20:28,664 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:20:28,665 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:20:28,666 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:20:28,666 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:20:28,668 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:20:28,668 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:20:28,669 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:20:28,670 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:20:28,670 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:20:28,671 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:20:28,673 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:20:28,673 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:20:28,674 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:23:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:23:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:23:28,597 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:23:28,598 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:23:28,598 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:23:28,601 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:23:28,602 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:23:28,602 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:23:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:23:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:23:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:23:28,609 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:23:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:23:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:23:28,615 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:23:28,617 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:23:28,618 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:23:28,621 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:23:28,623 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:23:28,624 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:23:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:23:28,627 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:23:28,628 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:23:28,629 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:23:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:23:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:23:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:23:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:23:28,635 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:23:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:23:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:23:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:23:28,639 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:23:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:23:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:23:28.64(Timestamp)
2020-01-18 14:23:28,644 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:23:28,645 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:23:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:23:28.645(Timestamp)
2020-01-18 14:23:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:23:28,648 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:23:28,649 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:23:28,650 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:23:28,651 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:23:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:23:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:23:28,654 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:23:28,654 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:23:28,655 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:23:28,656 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:23:28,656 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:23:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:23:28,659 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:23:28,659 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:23:28,660 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:26:28,582 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:26:28,582 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:26:28,584 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:26:28,584 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:26:28,585 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:26:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:26:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:26:28,587 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:26:28,587 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:26:28,589 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:26:28,589 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:26:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:26:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:26:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:26:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:26:28,606 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:26:28,607 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:26:28,608 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:26:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:26:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:26:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:26:28,612 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:26:28,613 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:26:28,614 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:26:28,614 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:26:28,614 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:26:28,615 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:26:28,617 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:26:28,617 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:26:28,618 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:26:28,620 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:26:28,620 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:26:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:26:28,622 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:26:28,622 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:26:28.621(Timestamp)
2020-01-18 14:26:28,626 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:26:28,626 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:26:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:26:28.626(Timestamp)
2020-01-18 14:26:28,629 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:26:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:26:28,631 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:26:28,632 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:26:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:26:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:26:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:26:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:26:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:26:28,637 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:26:28,638 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:26:28,639 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:26:28,640 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:26:28,642 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:26:28,642 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:26:28,643 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:29:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:29:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:29:28,595 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:29:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:29:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:29:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:29:28,600 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:29:28,601 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:29:28,603 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:29:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:29:28,609 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:29:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:29:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:29:28,615 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:29:28,619 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:29:28,623 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:29:28,624 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:29:28,625 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:29:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:29:28,628 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:29:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:29:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:29:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:29:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:29:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:29:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:29:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:29:28,635 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:29:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:29:28,637 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:29:28,639 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:29:28,640 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:29:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:29:28,642 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:29:28,643 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:29:28.642(Timestamp)
2020-01-18 14:29:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:29:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:29:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:29:28.646(Timestamp)
2020-01-18 14:29:28,649 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:29:28,650 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:29:28,651 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:29:28,652 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:29:28,653 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:29:28,654 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:29:28,655 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:29:28,656 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:29:28,656 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:29:28,657 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:29:28,658 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:29:28,658 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:29:28,659 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:29:28,660 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:29:28,660 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:29:28,661 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:32:28,580 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:32:28,580 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:32:28,582 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:32:28,583 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:32:28,583 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:32:28,584 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:32:28,585 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:32:28,585 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:32:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:32:28,587 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:32:28,588 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:32:28,589 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:32:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:32:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:32:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:32:28,593 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:32:28,594 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:32:28,596 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:32:28,598 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:32:28,598 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:32:28,599 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:32:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:32:28,600 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:32:28,600 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:32:28,601 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:32:28,601 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:32:28,602 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:32:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:32:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:32:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:32:28,606 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:32:28,606 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:32:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:32:28,608 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:32:28,609 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:32:28.608(Timestamp)
2020-01-18 14:32:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:32:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:32:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:32:28.612(Timestamp)
2020-01-18 14:32:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:32:28,615 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:32:28,616 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:32:28,616 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:32:28,618 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:32:28,618 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:32:28,619 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:32:28,621 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:32:28,621 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:32:28,622 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:32:28,623 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:32:28,623 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:32:28,624 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:32:28,626 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:32:28,626 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:32:28,627 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:35:28,584 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:35:28,584 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:35:28,586 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:35:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:35:28,587 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:35:28,588 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:35:28,588 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:35:28,589 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:35:28,590 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:35:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:35:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:35:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:35:28,595 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:35:28,596 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:35:28,596 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:35:28,598 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:35:28,598 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:35:28,599 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:35:28,600 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:35:28,601 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:35:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:35:28,603 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:35:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:35:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:35:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:35:28,606 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:35:28,607 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:35:28,608 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:35:28,609 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:35:28,610 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:35:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:35:28,613 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:35:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:35:28,615 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:35:28,616 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:35:28.615(Timestamp)
2020-01-18 14:35:28,618 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:35:28,618 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:35:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:35:28.618(Timestamp)
2020-01-18 14:35:28,623 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:35:28,624 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:35:28,624 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:35:28,625 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:35:28,626 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:35:28,627 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:35:28,628 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:35:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:35:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:35:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:35:28,632 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:35:28,632 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:35:28,633 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:35:28,634 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:35:28,634 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:35:28,635 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:38:28,580 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:38:28,581 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:38:28,582 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:38:28,583 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:38:28,583 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:38:28,584 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:38:28,584 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:38:28,585 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:38:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:38:28,587 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:38:28,587 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:38:28,588 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:38:28,589 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:38:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:38:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:38:28,591 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:38:28,592 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:38:28,592 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:38:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:38:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:38:28,595 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:38:28,595 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:38:28,595 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:38:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:38:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:38:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:38:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:38:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:38:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:38:28,601 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:38:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:38:28,604 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:38:28,605 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:38:28,606 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:38:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:38:28.606(Timestamp)
2020-01-18 14:38:28,609 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:38:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:38:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:38:28.61(Timestamp)
2020-01-18 14:38:28,613 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:38:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:38:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:38:28,615 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:38:28,616 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:38:28,617 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:38:28,617 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:38:28,619 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:38:28,619 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:38:28,620 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:38:28,621 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:38:28,621 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:38:28,622 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:38:28,623 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:38:28,623 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:38:28,623 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:41:28,589 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:41:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:41:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:41:28,593 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:41:28,595 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:41:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:41:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:41:28,598 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:41:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:41:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:41:28,604 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:41:28,606 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:41:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:41:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:41:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:41:28,616 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:41:28,617 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:41:28,618 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:41:28,623 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:41:28,624 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:41:28,625 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:41:28,626 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:41:28,626 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:41:28,627 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:41:28,627 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:41:28,628 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:41:28,629 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:41:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:41:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:41:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:41:28,634 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:41:28,634 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:41:28,635 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:41:28,637 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:41:28,637 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:41:28.636(Timestamp)
2020-01-18 14:41:28,642 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:41:28,642 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:41:28,643 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:41:28.642(Timestamp)
2020-01-18 14:41:28,645 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:41:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:41:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:41:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:41:28,649 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:41:28,650 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:41:28,650 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:41:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:41:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:41:28,653 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:41:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:41:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:41:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:41:28,656 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:41:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:41:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:44:28,584 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:44:28,585 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:44:28,587 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:44:28,587 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:44:28,588 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:44:28,589 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:44:28,590 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:44:28,590 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:44:28,591 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:44:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:44:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:44:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:44:28,595 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:44:28,595 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:44:28,597 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:44:28,599 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:44:28,599 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:44:28,601 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:44:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:44:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:44:28,604 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:44:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:44:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:44:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:44:28,606 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:44:28,606 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:44:28,606 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:44:28,608 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:44:28,609 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:44:28,609 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:44:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:44:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:44:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:44:28,613 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:44:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:44:28.613(Timestamp)
2020-01-18 14:44:28,617 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:44:28,618 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:44:28,618 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:44:28.618(Timestamp)
2020-01-18 14:44:28,620 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:44:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:44:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:44:28,622 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:44:28,623 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:44:28,624 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:44:28,624 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:44:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:44:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:44:28,626 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:44:28,627 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:44:28,627 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:44:28,629 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:44:28,630 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:44:28,630 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:44:28,631 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:47:28,587 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:47:28,588 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:47:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:47:28,593 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:47:28,593 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:47:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:47:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:47:28,598 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:47:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:47:28,602 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:47:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:47:28,604 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:47:28,608 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:47:28,608 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:47:28,612 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:47:28,615 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:47:28,616 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:47:28,619 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:47:28,622 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:47:28,623 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:47:28,625 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:47:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:47:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:47:28,626 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:47:28,627 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:47:28,627 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:47:28,628 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:47:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:47:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:47:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:47:28,637 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:47:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:47:28,639 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:47:28,640 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:47:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:47:28.64(Timestamp)
2020-01-18 14:47:28,645 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:47:28,645 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:47:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:47:28.645(Timestamp)
2020-01-18 14:47:28,648 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:47:28,648 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:47:28,649 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:47:28,650 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:47:28,651 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:47:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:47:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:47:28,654 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:47:28,654 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:47:28,655 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:47:28,656 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:47:28,656 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:47:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:47:28,658 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:47:28,659 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:47:28,660 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:50:28,590 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:50:28,591 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:50:28,596 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:50:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:50:28,598 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:50:28,602 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:50:28,603 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:50:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:50:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:50:28,609 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:50:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:50:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:50:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:50:28,615 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:50:28,620 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:50:28,622 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:50:28,623 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:50:28,625 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:50:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:50:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:50:28,628 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:50:28,629 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:50:28,629 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:50:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:50:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:50:28,630 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:50:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:50:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:50:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:50:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:50:28,636 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:50:28,636 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:50:28,637 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:50:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:50:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:50:28.638(Timestamp)
2020-01-18 14:50:28,642 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:50:28,643 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:50:28,644 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:50:28.643(Timestamp)
2020-01-18 14:50:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:50:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:50:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:50:28,648 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:50:28,649 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:50:28,650 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:50:28,651 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:50:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:50:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:50:28,653 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:50:28,654 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:50:28,654 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:50:28,656 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:50:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:50:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:50:28,658 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:53:28,591 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:53:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:53:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:53:28,595 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:53:28,595 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:53:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:53:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:53:28,598 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:53:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:53:28,602 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:53:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:53:28,604 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:53:28,606 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:53:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:53:28,608 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:53:28,610 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:53:28,611 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:53:28,612 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:53:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:53:28,614 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:53:28,616 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:53:28,616 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:53:28,617 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:53:28,618 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:53:28,618 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:53:28,619 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:53:28,620 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:53:28,622 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:53:28,623 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:53:28,624 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:53:28,625 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:53:28,626 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:53:28,626 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:53:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:53:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:53:28.627(Timestamp)
2020-01-18 14:53:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:53:28,631 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:53:28,631 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:53:28.631(Timestamp)
2020-01-18 14:53:28,633 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:53:28,634 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:53:28,634 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:53:28,635 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:53:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:53:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:53:28,637 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:53:28,638 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:53:28,638 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:53:28,639 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:53:28,640 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:53:28,641 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:53:28,641 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:53:28,642 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:53:28,643 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:53:28,643 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:56:28,582 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:56:28,583 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:56:28,585 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:56:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:56:28,586 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:56:28,588 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:56:28,589 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:56:28,589 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:56:28,591 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:56:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:56:28,594 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:56:28,595 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:56:28,597 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:56:28,597 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:56:28,600 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:56:28,602 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:56:28,602 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:56:28,605 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:56:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:56:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:56:28,609 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:56:28,609 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:56:28,610 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:56:28,611 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:56:28,611 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:56:28,612 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:56:28,613 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:56:28,615 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:56:28,616 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:56:28,617 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:56:28,619 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:56:28,619 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:56:28,620 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:56:28,622 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:56:28,623 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:56:28.622(Timestamp)
2020-01-18 14:56:28,626 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:56:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:56:28,627 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:56:28.627(Timestamp)
2020-01-18 14:56:28,629 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:56:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:56:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:56:28,631 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:56:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:56:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:56:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:56:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:56:28,634 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:56:28,635 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:56:28,636 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:56:28,636 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:56:28,637 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:56:28,638 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:56:28,639 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:56:28,639 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 14:59:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:59:28,593 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:59:28,598 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:59:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:59:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:59:28,603 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:59:28,604 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:59:28,605 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:59:28,606 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:59:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:59:28,611 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 14:59:28,613 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:59:28,616 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 14:59:28,617 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 14:59:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 14:59:28,624 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 14:59:28,625 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 14:59:28,627 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 14:59:28,629 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 14:59:28,629 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 14:59:28,630 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 14:59:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:59:28,631 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 14:59:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:59:28,632 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 14:59:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 14:59:28,633 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 14:59:28,635 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:59:28,636 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:59:28,637 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 14:59:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 14:59:28,639 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 14:59:28,640 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 14:59:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:59:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:59:28.641(Timestamp)
2020-01-18 14:59:28,645 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:59:28,645 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 14:59:28,646 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 14:59:28.645(Timestamp)
2020-01-18 14:59:28,647 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 14:59:28,648 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 14:59:28,649 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 14:59:28,649 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 14:59:28,651 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:59:28,651 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 14:59:28,652 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:59:28,653 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 14:59:28,653 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 14:59:28,654 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 14:59:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 14:59:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 14:59:28,657 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 14:59:28,658 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 14:59:28,658 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 14:59:28,659 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 15:02:28,587 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 15:02:28,588 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 15:02:28,592 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 15:02:28,592 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:02:28,593 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 15:02:28,596 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:02:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:02:28,597 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 15:02:28,599 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:02:28,601 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 15:02:28,602 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 15:02:28,603 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 15:02:28,606 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 15:02:28,607 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 15:02:28,610 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 15:02:28,613 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 15:02:28,614 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 15:02:28,617 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 15:02:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 15:02:28,621 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 15:02:28,623 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 15:02:28,624 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:02:28,624 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 15:02:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:02:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:02:28,625 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 15:02:28,626 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:02:28,628 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 15:02:28,628 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 15:02:28,629 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 15:02:28,631 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 15:02:28,631 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 15:02:28,632 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 15:02:28,634 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 15:02:28,635 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 15:02:28.633(Timestamp)
2020-01-18 15:02:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 15:02:28,638 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 15:02:28,639 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 15:02:28.638(Timestamp)
2020-01-18 15:02:28,641 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 15:02:28,642 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 15:02:28,643 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 15:02:28,644 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 0
2020-01-18 15:02:28,646 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 15:02:28,646 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 15:02:28,647 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:02:28,648 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? 
2020-01-18 15:02:28,648 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 15:02:28,649 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:02:28,651 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 15:02:28,651 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 15:02:28,653 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 15:02:28,654 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 15:02:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 15:02:28,655 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 15:08:56,598 [main] INFO  com.jizhi.QMApplication 48 - Starting QMApplication on SC-201804072133 with PID 15448 (E:\Ericcccccccccccccccccccccc\QMproject\quanming\target\classes started by Administrator in E:\Ericcccccccccccccccccccccc\QMproject\quanming)
2020-01-18 15:08:56,600 [main] DEBUG com.jizhi.QMApplication 51 - Running with Spring Boot v1.5.3.RELEASE, Spring v4.3.8.RELEASE
2020-01-18 15:08:56,600 [main] INFO  com.jizhi.QMApplication 637 - No active profile set, falling back to default profiles: default
2020-01-18 15:08:56,647 [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext 582 - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 15:08:56 CST 2020]; root of context hierarchy
2020-01-18 15:08:57,063 [background-preinit] INFO  o.h.validator.internal.util.Version 30 - HV000001: Hibernate Validator 5.3.5.Final
2020-01-18 15:08:57,698 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate 165 - Multiple Spring Data modules found, entering strict repository configuration mode!
2020-01-18 15:08:59,266 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 89 - Tomcat initialized with port(s): 8090 (http)
2020-01-18 15:08:59,285 [main] INFO  o.a.catalina.core.StandardService 179 - Starting service Tomcat
2020-01-18 15:08:59,286 [main] INFO  o.a.catalina.core.StandardEngine 179 - Starting Servlet Engine: Apache Tomcat/8.5.14
2020-01-18 15:08:59,395 [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] 179 - Initializing Spring embedded WebApplicationContext
2020-01-18 15:08:59,396 [localhost-startStop-1] INFO  o.s.web.context.ContextLoader 276 - Root WebApplicationContext: initialization completed in 2749 ms
2020-01-18 15:08:59,544 [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean 190 - Mapping servlet: 'dispatcherServlet' to [/]
2020-01-18 15:08:59,548 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'characterEncodingFilter' to: [/*]
2020-01-18 15:08:59,549 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2020-01-18 15:08:59,549 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2020-01-18 15:08:59,549 [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean 258 - Mapping filter: 'requestContextFilter' to: [/*]
2020-01-18 15:09:00,647 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter 534 - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@233fe9b6: startup date [Sat Jan 18 15:08:56 CST 2020]; root of context hierarchy
2020-01-18 15:09:00,715 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.saveIdCard(com.jizhi.pojo.AccountCard,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/del]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.delIdCard(com.jizhi.pojo.AccountCard)
2020-01-18 15:09:00,716 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/accountCard/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AccountCardController.queryAll(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.queryAnimalList()
2020-01-18 15:09:00,717 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/animal/firstPage]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.AnimalController.firstPageInfo()
2020-01-18 15:09:00,718 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryTotal]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryTotalFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,719 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/send]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.sendFeed(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.FeedSendParam)
2020-01-18 15:09:00,719 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/feed/queryDetail]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.FeedController.queryFeedDetail(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,721 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.saveIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.updateIdCard(com.jizhi.pojo.IdCard,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,722 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/idCard/isConfirmed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.IdCardController.isConfirmed(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,725 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/buyerToPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.buyerToPay(com.jizhi.pojo.Match)
2020-01-18 15:09:00,726 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allFeeding]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllFeeding(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,726 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/doPay]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.doPay(com.jizhi.pojo.vo.BuyerDoPay,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,726 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/user/allBuying]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MatchController.showAllBuying(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,729 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/all]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showAllMessage()
2020-01-18 15:09:00,730 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/part]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.showMessage(com.jizhi.pojo.Message)
2020-01-18 15:09:00,730 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/save]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.addMessage(com.jizhi.pojo.Message)
2020-01-18 15:09:00,730 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/message/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.MessageController.deleteMsg(com.jizhi.pojo.Message)
2020-01-18 15:09:00,731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.update(com.jizhi.pojo.NormalQue)
2020-01-18 15:09:00,731 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/delete]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.delete(com.jizhi.pojo.NormalQue)
2020-01-18 15:09:00,732 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/queryAll]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.queryAllQue()
2020-01-18 15:09:00,732 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/que/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.NormalQueController.addQue(com.jizhi.pojo.NormalQue)
2020-01-18 15:09:00,733 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/allOrder]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.queryAllByUserId(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,733 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/try]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.toOrder(com.jizhi.pojo.Animal,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,733 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/order/add]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OrderController.addOrder(com.jizhi.pojo.OrderTime,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,734 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/otherInfo/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.OtherInfoController.query()
2020-01-18 15:09:00,734 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/NFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.NFCToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 15:09:00,735 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryNFCToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryNFCToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,735 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/shareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.shareProfitsToFeed(com.jizhi.pojo.vo.FeedExchangeParam)
2020-01-18 15:09:00,736 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/update]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.updateShareProfit(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.vo.UserInfo)
2020-01-18 15:09:00,737 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/profits/tryShareProfitsToFeed]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ProfitsController.tryShareProfitsToFeed(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,739 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/toSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.toSell(com.jizhi.pojo.Match)
2020-01-18 15:09:00,740 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSoldList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSold(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,740 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/cancelSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.cancelSell(com.jizhi.pojo.vo.Sell)
2020-01-18 15:09:00,740 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/isSellingList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.isSelling(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/doSell]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.doSell(com.jizhi.pojo.vo.Sell)
2020-01-18 15:09:00,741 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/property/waitSellList]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.PropertyController.waitSell(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/query]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.query(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendPic]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addPic(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 15:09:00,742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/allNotAnswered]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryNotAnswered()
2020-01-18 15:09:00,742 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/queryQue]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.queryQue(com.jizhi.pojo.User)
2020-01-18 15:09:00,743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/answer]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.answer(com.jizhi.pojo.ServiceOnline)
2020-01-18 15:09:00,743 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/serviceOnline/sendMsg]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.ServiceOnlineController.addMsg(javax.servlet.http.HttpServletRequest,com.jizhi.pojo.ServiceOnline)
2020-01-18 15:09:00,744 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/register]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.register(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 15:09:00,746 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/test]}" onto public java.lang.String com.jizhi.controller.UserController.voidtest(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,747 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/share]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.share(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,748 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/myTeam]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryMyTeam(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,748 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/login]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.login(com.jizhi.pojo.User)
2020-01-18 15:09:00,749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updatePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updatePsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/userInfo]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.queryUserInfo(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,749 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/renamePsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.forgetPsw(com.jizhi.pojo.vo.LoginInfo)
2020-01-18 15:09:00,750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/updateSecondPsw]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.updateSecondPsw(com.jizhi.pojo.vo.PswInfo,javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/code]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.sendMsgCode(com.jizhi.pojo.User) throws java.lang.Exception
2020-01-18 15:09:00,750 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/qm/quit]}" onto public com.jizhi.pojo.FinalResult com.jizhi.controller.UserController.quit(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,753 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2020-01-18 15:09:00,754 [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping 543 - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2020-01-18 15:09:00,800 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/pics/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 15:09:00,800 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 15:09:00,800 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 15:09:00,837 [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping 362 - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-01-18 15:09:01,099 [main] INFO  o.s.j.e.a.AnnotationMBeanExporter 431 - Registering beans for JMX exposure on startup
2020-01-18 15:09:01,111 [main] INFO  o.s.s.a.ScheduledAnnotationBeanPostProcessor 260 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
2020-01-18 15:09:01,127 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Initializing ProtocolHandler ["http-nio-8090"]
2020-01-18 15:09:01,137 [pool-1-thread-1] WARN  o.a.tomcat.jdbc.pool.ConnectionPool 179 - maxIdle is larger than maxActive, setting maxIdle to: 20
2020-01-18 15:09:01,141 [main] INFO  o.a.coyote.http11.Http11NioProtocol 179 - Starting ProtocolHandler ["http-nio-8090"]
2020-01-18 15:09:01,157 [main] INFO  o.a.tomcat.util.net.NioSelectorPool 179 - Using a shared selector for servlet write/read
2020-01-18 15:09:01,184 [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer 198 - Tomcat started on port(s): 8090 (http)
2020-01-18 15:09:01,193 [main] INFO  com.jizhi.QMApplication 57 - Started QMApplication in 4.961 seconds (JVM running for 5.405)
2020-01-18 15:09:01,422 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 15:09:01,447 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 15:09:01,459 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 15:09:01,461 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:09:01,461 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 15:09:01,462 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:09:01,463 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:09:01,463 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 15:09:01,464 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:09:01,468 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 15:09:01,468 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 15:09:01,469 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 15:09:01,472 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 15:09:01,473 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 15:09:01,474 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 15:09:01,476 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 15:09:01,477 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 15:09:01,478 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 15:09:01,480 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 15:09:01,481 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 15:09:01,482 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 15:09:01,482 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:09:01,483 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 15:09:01,484 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:09:01,485 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:09:01,486 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 15:09:01,486 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:09:01,489 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? and state=1; 
2020-01-18 15:09:01,490 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 15:09:01,491 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 2
2020-01-18 15:09:01,492 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 15:09:01,492 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 1(Integer)
2020-01-18 15:09:01,493 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 15:09:01,495 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 15:09:01,496 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 3(Integer), 6.0(Double), 6(Integer), 2020-01-18 15:09:01.495(Timestamp)
2020-01-18 15:09:01,497 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 15:09:01,498 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==>  Preparing: insert into feed(userId,num,type,date) values (?,?,?,?) 
2020-01-18 15:09:01,499 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - ==> Parameters: 4(Integer), 6.0(Double), 6(Integer), 2020-01-18 15:09:01.498(Timestamp)
2020-01-18 15:09:01,501 [pool-1-thread-1] DEBUG com.jizhi.dao.FeedDao.insert 159 - <==    Updates: 1
2020-01-18 15:09:01,502 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==>  Preparing: update orders set state=? where date=? and time=? and animalId=? and role=? and state=1 
2020-01-18 15:09:01,502 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - ==> Parameters: 0(Integer), 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 15:09:01,504 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.updateToFail 159 - <==    Updates: 2
2020-01-18 15:09:01,506 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? and state=1; 
2020-01-18 15:09:01,507 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 15:09:01,507 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:09:01,509 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? and state=1; 
2020-01-18 15:09:01,510 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 15:09:01,510 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:09:01,512 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 15:09:01,512 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 15:09:01,513 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 15:09:01,515 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 15:09:01,515 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 15:09:01,516 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
2020-01-18 15:12:01,127 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 15:12:01,127 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 15:12:01,129 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 15:12:01,130 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:12:01,131 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 15:12:01,131 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:12:01,132 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:12:01,132 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 15:12:01,133 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:12:01,135 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==>  Preparing: select id,animalType,size,profit,minPrice,maxPrice,nfc,cycle from animal where id=? 
2020-01-18 15:12:01,136 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - ==> Parameters: 2(Integer)
2020-01-18 15:12:01,137 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryById 159 - <==      Total: 1
2020-01-18 15:12:01,138 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==>  Preparing: select id,userId,animalId,date,time,state,role from orders where animalId=? and date=? and time=? and state=1 and role=0 and flag=0 
2020-01-18 15:12:01,139 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - ==> Parameters: 2(Integer), 2020-01-18(String), 14:00(String)
2020-01-18 15:12:01,140 [pool-1-thread-1] DEBUG com.jizhi.dao.OrderDao.queryAll 159 - <==      Total: 0
2020-01-18 15:12:01,141 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==>  Preparing: select id,userId,animalId,price,buyDate,buyTime,role,code from property where animalId=? and buyDate=? and buyTime=? and isSold=0 and role=0 
2020-01-18 15:12:01,142 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - ==> Parameters: 2(Integer), 2020-01-17(String), 14:00(String)
2020-01-18 15:12:01,143 [pool-1-thread-1] DEBUG c.jizhi.dao.PropertyDao.queryCanSell 159 - <==      Total: 0
2020-01-18 15:12:01,146 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==>  Preparing: select id,animalType,size,minPrice,maxPrice,profit,cycle,nfc,isShow from animal 
2020-01-18 15:12:01,146 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - ==> Parameters: 
2020-01-18 15:12:01,147 [pool-1-thread-1] DEBUG com.jizhi.dao.AnimalDao.queryAll 159 - <==      Total: 2
2020-01-18 15:12:01,147 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:12:01,147 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 1(Integer)
2020-01-18 15:12:01,148 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:12:01,148 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==>  Preparing: select id, animalId, startTime,endTime from order_time where animalId=? 
2020-01-18 15:12:01,149 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - ==> Parameters: 2(Integer)
2020-01-18 15:12:01,150 [pool-1-thread-1] DEBUG c.j.dao.OrderTimeDao.queryByAnimalId 159 - <==      Total: 2
2020-01-18 15:12:01,152 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? and state=1; 
2020-01-18 15:12:01,152 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 14:00(String), 1(Integer), 0(Integer)
2020-01-18 15:12:01,153 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:12:01,155 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? and state=1; 
2020-01-18 15:12:01,155 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 1(Integer), 0(Integer)
2020-01-18 15:12:01,156 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:12:01,157 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==>  Preparing: select * from orders where date=? and time=? and animalId=? and role=? and state=1; 
2020-01-18 15:12:01,158 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - ==> Parameters: 2020-01-18(String), 9:00(String), 2(Integer), 0(Integer)
2020-01-18 15:12:01,158 [pool-1-thread-1] DEBUG c.j.dao.OrderDao.queryFailedOrder 159 - <==      Total: 0
2020-01-18 15:12:01,160 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=0 and sellerConfirm=0 
2020-01-18 15:12:01,160 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - ==> Parameters: 
2020-01-18 15:12:01,161 [pool-1-thread-1] DEBUG c.j.d.M.queryAllByBuyerConfirm 159 - <==      Total: 0
2020-01-18 15:12:01,163 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==>  Preparing: select id,orderId,propertyId,price from match_tb where buyerConfirm=1 and sellerConfirm=0 
2020-01-18 15:12:01,163 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - ==> Parameters: 
2020-01-18 15:12:01,164 [pool-1-thread-1] DEBUG c.j.d.M.queryAllBySellerConfirm 159 - <==      Total: 0
